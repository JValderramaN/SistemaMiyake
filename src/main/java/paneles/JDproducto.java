/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;


import hibernate.anotaciones.util.DaoQuery;
import hibernate.anotaciones.util.JavaUtil;
import hibernate.anotaciones.util.ObjectModelDAO;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelos.Clasificacion;
import modelos.Marca;
import modelos.Producto;
import modelos.Proveedor;
import org.hibernate.Query;

/**
 *
 * @author Usuario
 */
public class JDproducto extends javax.swing.JDialog {
    
    private List resultListClasificacion;
    private List resultListMarca;
    private List resultListProveedor;
    private List resultListProducto;
    private int pos;
    private boolean sw = true;
    private Thread hilo = null;
    
    public Producto ultimoCreado = null;
    private Producto productoParam;
    private boolean opcion_crear = false;
    
    public JDproducto(java.awt.Frame parent, boolean modal, Producto p) {
        super(parent, modal);
        productoParam = p;
        if (productoParam != null) {//desea crear producto
            opcion_crear = true;
        }
        initComponents();
        if (productoParam != null) {//desea crear producto
            panelScrudProducto.setSelectedIndex(1);
        }
        tablaModifProducto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {
                    
                    pos = tablaModifProducto.getSelectedRow();
                    if (pos == -1) {
                        return;
                    }

                    //Producto p = (Producto) resultListProducto.get(pos);
                    Producto p = null;
                    boolean sw = false;
                    for (int i = 0; i < resultListProducto.size(); i++) {
                        p = (Producto) resultListProducto.get(i);
                        if (((Integer) tablaModifProducto.getValueAt(
                                tablaModifProducto.getSelectedRow(), 0)).equals(
                                        p.getIdProducto())) {
                            sw = true;
                            break;
                        }
                    }
                    if (sw && p != null) {
                        field_descrip.setText(p.getDescripcion());
                        field_precioOrig.setText(p.getPrecioOriginal() + "");
                        field_ref.setText(p.getReferenciaProducto());
                        field_codproducto.setText(p.getIdProducto() + "");
                        //cb_clasif1.setSelectedItem(p.getIdClasificacion().getNombre());
                        cb_clasifProduct1.setSelectedItem(p.getIdClasificacion() == null ? null : p.getIdClasificacion().getNombre());
                        cb_proveedor1.setSelectedItem(p.getIdProveedor() == null ? null : p.getIdProveedor().getNombre());
                        cb_marca1.setSelectedItem(p.getIdMarca() == null ? null : p.getIdMarca().getNombre());
                        lb_dptoProduct1.setText(p.getIdClasificacion().getIdDepartamento().getNombre());
                        lb_divisionProd1.setText(p.getIdClasificacion().getIdDepartamento().getIdDivision().getNombre());
                    }
                }
            }
        });
        
        tablaEliminarProducto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {
                    
                    if (tablaEliminarProducto.getSelectedRow() == -1) {
                        return;
                    }
                    pos = tablaEliminarProducto.getSelectedRow();
                    
                }
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelScrudProducto = new javax.swing.JTabbedPane();
        panelConsulta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        f_productbuscado = new javax.swing.JTextField();
        b_buscarproduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoProductos = new org.jdesktop.swingx.JXTable();
        cb_busquedaClasif = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        cb_busquedaMarca = new javax.swing.JComboBox();
        panelCrearProducto = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        bCrearProducto = new javax.swing.JButton();
        bCrearClasif = new javax.swing.JButton();
        bCrearMarca = new javax.swing.JButton();
        bCrearProveedor = new javax.swing.JButton();
        f_descripcionProducto = new javax.swing.JTextField();
        f_ref_Product = new javax.swing.JTextField();
        f_precio_orig = new javax.swing.JTextField();
        cb_marca = new javax.swing.JComboBox();
        cb_clasif = new javax.swing.JComboBox();
        cb_proveedor = new javax.swing.JComboBox();
        lb_divisionProd = new javax.swing.JLabel();
        lb_dptoProduct = new javax.swing.JLabel();
        panelModificarProducto = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        field_descrip = new javax.swing.JTextField();
        field_externo = new javax.swing.JTextField();
        field_ref = new javax.swing.JTextField();
        field_precioalto = new javax.swing.JTextField();
        field_precioOrig = new javax.swing.JTextField();
        field_precioventa = new javax.swing.JTextField();
        cb_marca1 = new javax.swing.JComboBox();
        cb_proveedor1 = new javax.swing.JComboBox();
        bModifProducto = new javax.swing.JButton();
        lb_divisionProd1 = new javax.swing.JLabel();
        lb_dptoProduct1 = new javax.swing.JLabel();
        cb_clasifProduct1 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        field_codproducto = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaModifProducto = new org.jdesktop.swingx.JXTable();
        jLabel24 = new javax.swing.JLabel();
        field_Cod_Prod_Buscado = new javax.swing.JTextField();
        bBuscarProdModf = new javax.swing.JButton();
        panelEliminarProducto = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEliminarProducto = new org.jdesktop.swingx.JXTable();
        bEliminProducto = new javax.swing.JButton();
        busy = new org.jdesktop.swingx.JXBusyLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelScrudProducto.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelScrudProductoStateChanged(evt);
            }
        });

        jLabel1.setText(" Referencia de Producto:");

        f_productbuscado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f_productbuscadoKeyReleased(evt);
            }
        });

        b_buscarproduct.setText("Buscar");
        b_buscarproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarproductActionPerformed(evt);
            }
        });

        listadoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Clasificación", "Proveedor", "Descripción", "Referencia", "Precio de Venta", "Marca", "Precio Original", "Precio Actual", "Código Externo", "Código Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listadoProductos);

        cb_busquedaClasif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_busquedaClasifActionPerformed(evt);
            }
        });

        jLabel26.setText("Clasificación");

        jLabel27.setText("Marca");

        cb_busquedaMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_busquedaMarcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConsultaLayout = new javax.swing.GroupLayout(panelConsulta);
        panelConsulta.setLayout(panelConsultaLayout);
        panelConsultaLayout.setHorizontalGroup(
            panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(f_productbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(b_buscarproduct)
                .addGap(93, 93, 93)
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_busquedaMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_busquedaClasif, 0, 157, Short.MAX_VALUE))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        panelConsultaLayout.setVerticalGroup(
            panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(f_productbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_buscarproduct)
                    .addComponent(cb_busquedaClasif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(cb_busquedaMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        panelScrudProducto.addTab("Consultar", panelConsulta);

        jLabel2.setText("Clasificación:");

        jLabel3.setText("Proveedor:");

        jLabel4.setText("Descripción:");

        jLabel5.setText("Marca:");

        jLabel7.setText("Referencia del Producto:");

        jLabel8.setText("Precio Original:");

        jLabel11.setText("División:");

        jLabel12.setText("Departamento:");

        bCrearProducto.setText("Crear Producto");
        bCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearProductoActionPerformed(evt);
            }
        });

        bCrearClasif.setText("Crear Clasificación");
        bCrearClasif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearClasifActionPerformed(evt);
            }
        });

        bCrearMarca.setText("Crear Marca");
        bCrearMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearMarcaActionPerformed(evt);
            }
        });

        bCrearProveedor.setText("Crear Proveedor");
        bCrearProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearProveedorActionPerformed(evt);
            }
        });

        cb_clasif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_clasifActionPerformed(evt);
            }
        });

        lb_dptoProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout panelCrearProductoLayout = new javax.swing.GroupLayout(panelCrearProducto);
        panelCrearProducto.setLayout(panelCrearProductoLayout);
        panelCrearProductoLayout.setHorizontalGroup(
            panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrearProductoLayout.createSequentialGroup()
                .addGap(281, 281, 281)
                .addComponent(bCrearProducto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCrearProductoLayout.createSequentialGroup()
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_ref_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(f_precio_orig, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_descripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_clasif, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cb_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelCrearProductoLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addComponent(lb_divisionProd, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelCrearProductoLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(18, 18, 18)
                            .addComponent(lb_dptoProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addGap(0, 31, Short.MAX_VALUE)
                        .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(62, 62, 62)
                        .addComponent(cb_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bCrearMarca, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bCrearProveedor, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bCrearClasif, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(41, 41, 41))
        );
        panelCrearProductoLayout.setVerticalGroup(
            panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrearProductoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_divisionProd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel11)
                        .addComponent(f_descripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lb_dptoProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(bCrearClasif)
                            .addComponent(f_ref_Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_clasif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelCrearProductoLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(bCrearMarca)
                            .addComponent(cb_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_precio_orig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 70, Short.MAX_VALUE)
                .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bCrearProveedor)
                    .addGroup(panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cb_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(bCrearProducto)
                .addGap(135, 135, 135))
        );

        panelScrudProducto.addTab("Crear", panelCrearProducto);

        jLabel13.setText("Clasificación:");

        jLabel14.setText("Proveedor:");

        jLabel15.setText("Descripción:");

        jLabel16.setText("Marca");

        jLabel17.setText("Código Externo:");

        jLabel18.setText("Referencia del Producto:");

        jLabel19.setText("Precio Original:");

        jLabel20.setText("Precio mas Alto:");

        jLabel21.setText("Precio de Venta:");

        jLabel22.setText("División:");

        jLabel23.setText("Departamento:");

        bModifProducto.setText("Modificar");
        bModifProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModifProductoActionPerformed(evt);
            }
        });

        cb_clasifProduct1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3", "3", "4" }));

        jLabel25.setText("Código Producto:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_marca1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_proveedor1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(bModifProducto)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cb_clasifProduct1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(36, 36, 36)
                                .addComponent(lb_divisionProd1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lb_dptoProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_precioalto, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel18)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(field_ref))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(field_precioOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_precioventa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_externo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel15)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field_descrip)
                                    .addComponent(field_codproducto))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(field_codproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(field_descrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(field_externo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(field_ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(field_precioOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(field_precioalto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(field_precioventa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lb_divisionProd1))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(lb_dptoProduct1))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cb_clasifProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(cb_marca1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cb_proveedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bModifProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tablaModifProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Clasificación", "Proveedor", "Descripción", "Referencia", "Precio de Venta", "Marca", "Precio Original", "Precio mas Alto", "Código Externo", "Código Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaModifProducto);

        jLabel24.setText("Código de Producto:");

        field_Cod_Prod_Buscado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                field_Cod_Prod_BuscadoKeyReleased(evt);
            }
        });

        bBuscarProdModf.setText("Buscar");
        bBuscarProdModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarProdModfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_Cod_Prod_Buscado, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(bBuscarProdModf, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(field_Cod_Prod_Buscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscarProdModf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelModificarProductoLayout = new javax.swing.GroupLayout(panelModificarProducto);
        panelModificarProducto.setLayout(panelModificarProductoLayout);
        panelModificarProductoLayout.setHorizontalGroup(
            panelModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelModificarProductoLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelModificarProductoLayout.setVerticalGroup(
            panelModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelScrudProducto.addTab("Modificar", panelModificarProducto);

        tablaEliminarProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Clasificación", "Proveedor", "Descripción", "Referencia", "Precio de Venta", "Marca", "Precio Original", "Precio mas Alto", "Código Externo", "Código Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaEliminarProducto);

        bEliminProducto.setText("Eliminar");
        bEliminProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEliminarProductoLayout = new javax.swing.GroupLayout(panelEliminarProducto);
        panelEliminarProducto.setLayout(panelEliminarProductoLayout);
        panelEliminarProductoLayout.setHorizontalGroup(
            panelEliminarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEliminarProductoLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bEliminProducto)
                .addGap(33, 33, 33))
        );
        panelEliminarProductoLayout.setVerticalGroup(
            panelEliminarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEliminarProductoLayout.createSequentialGroup()
                .addGroup(panelEliminarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelEliminarProductoLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(bEliminProducto)))
                .addContainerGap(227, Short.MAX_VALUE))
        );

        panelScrudProducto.addTab("Eliminar", panelEliminarProducto);

        busy.setText("Cargando...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelScrudProducto)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(381, 381, 381))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelScrudProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f_productbuscadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_productbuscadoKeyReleased
        
        if (!busy.isBusy()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(listadoProductos.getModel());
            listadoProductos.setRowSorter(sorter);
            String referenciabuscada = f_productbuscado.getText();
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + referenciabuscada));
        }
    }//GEN-LAST:event_f_productbuscadoKeyReleased

    private void b_buscarproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscarproductActionPerformed
        listadoProductos.removeAll();

        /*

         //String sql = "FROM Producto p WHERE p.referenciaProducto =('6418')"; //busqueexecuteQueryda manual
         //        String hql = "FROM Producto p WHERE p.referenciaProducto = :referenciaProducto";
         //        Query q = ObjectModelDAO.createQuery(hql);
         //        q.setParameter("referenciaProducto", referenciabuscada);
         resultListProducto = ObjectModelDAO.getResultQuery(q);
         boolean sw = false;
         for (int i = 0; i < resultListProducto.size(); i++) {
         Producto p = (Producto) resultListProducto.get(i);
         if (p.getReferenciaProducto() != null
         && p.getReferenciaProducto().equals(referenciabuscada)) {
         listadoProductos.setRowSelectionInterval(i, i);
         sw = true;
         break;
         }
         }

         if (!sw) {
         if (JOptionPane.showConfirmDialog(rootPane, "No se encontró ningun producto con la referencia"
         + "  " + referenciabuscada + "  " + "registrado en la base de datos" + "¿Desea Crear el Producto?",
         "Información", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

         panelScrudProducto.setSelectedIndex(1);
         f_ref_Product.setText(referenciabuscada);
         }
         }*/
        //            if (JOptionPane.showConfirmDialog(rootPane, "El producto existe" + "  "
        //                    + f_ref_Product.getText() + "  " + "¿Desea Modificar el Producto?",
        //                    "Información", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
        //                sw = false;
        //
        //                panelScrudProducto.setSelectedIndex(2);
        //                tablaModifProducto.setRowSelectionInterval(0, 0);
        //                field_Cod_Prod_Buscado.setText(field_codproducto.getText());
    }//GEN-LAST:event_b_buscarproductActionPerformed

    private void cb_busquedaClasifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_busquedaClasifActionPerformed
        if (!busy.isBusy()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(listadoProductos.getModel());
            listadoProductos.setRowSorter(sorter);
            String clasificacionbuscada = cb_busquedaClasif.getSelectedItem().toString();
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + clasificacionbuscada));
        }
    }//GEN-LAST:event_cb_busquedaClasifActionPerformed

    private void cb_busquedaMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_busquedaMarcaActionPerformed
        if (!busy.isBusy()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(listadoProductos.getModel());
            listadoProductos.setRowSorter(sorter);
            String marcabuscada = cb_busquedaMarca.getSelectedItem().toString();
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + marcabuscada));
        }
    }//GEN-LAST:event_cb_busquedaMarcaActionPerformed

    private void bCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearProductoActionPerformed
        try { 
            
            if (!f_descripcionProducto.getText().equals("") && !f_ref_Product.getText().equals("")
               
                    && !f_precio_orig.getText().equals("") ) {
                if (JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de crear el"
                        + " nuevo producto con nombre : " + f_descripcionProducto.getText() + "?",
                        "Información", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    
                    ObjectModelDAO.saveObject(
                            ultimoCreado = new Producto(
                                    f_descripcionProducto.getText(),
                                    f_ref_Product.getText(),
                                    Float.parseFloat(f_precio_orig.getText()),
                                    (Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex()),
                                    (Marca) resultListMarca.get(cb_marca.getSelectedIndex()),
                                    (Proveedor) resultListProveedor.get(cb_proveedor.getSelectedIndex())
                            )
                    );
                    if (productoParam != null) {
                        dispose();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bCrearProductoActionPerformed

    private void bCrearClasifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearClasifActionPerformed
        //        new Fclasificacion().setVisible(true);
    }//GEN-LAST:event_bCrearClasifActionPerformed

    private void bCrearMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearMarcaActionPerformed
        //        new Fmarca().setVisible(true);
    }//GEN-LAST:event_bCrearMarcaActionPerformed

    private void bCrearProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearProveedorActionPerformed
        //        new Fproveedor().setVisible(true);
    }//GEN-LAST:event_bCrearProveedorActionPerformed

    private void cb_clasifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_clasifActionPerformed
        if (cb_clasif.getSelectedIndex() == -1) {
            return;
        }
        lb_divisionProd.setText(((Clasificacion) resultListClasificacion.get(
                cb_clasif.getSelectedIndex())).getIdDepartamento().getIdDivision().getNombre());
        
        lb_dptoProduct.setText(((Clasificacion) resultListClasificacion.get(
                cb_clasif.getSelectedIndex())).getIdDepartamento().getNombre());
    }//GEN-LAST:event_cb_clasifActionPerformed

    private void bModifProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModifProductoActionPerformed
        if (pos == -1 || f_descripcionProducto.getText().equals("")) {
            return;
        }
        
        String valor = tablaModifProducto.getValueAt(tablaModifProducto.getSelectedRow(), 1).toString();//1 por el nombre
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de modificar el"
                + " Producto " + f_descripcionProducto.getText() + "?", "Información", JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION) {
            
            int posOr = this.pos;
            Producto p = (Producto) resultListProducto.get(posOr);
            p.setDescripcion(f_descripcionProducto.getText());
            p.setReferenciaProducto(f_ref_Product.getText());
            p.setPrecioOriginal(Float.parseFloat(f_precio_orig.getText()));
            p.setIdMarca((Marca) resultListMarca.get(cb_marca1.getSelectedIndex()));
            p.setIdProveedor((Proveedor) resultListProveedor.get(cb_proveedor1.getSelectedIndex()));
            p.setIdClasificacion((Clasificacion) resultListClasificacion.get(cb_clasifProduct1.getSelectedIndex()));
            p.setIdProducto(Integer.parseInt(field_codproducto.getText()));
            ObjectModelDAO.updateObject(p);
            
            resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
            resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
            resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
            cb_proveedor1.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca1.removeAllItems();
            
            for (Object object : resultListClasificacion) {
                Clasificacion c = (Clasificacion) object;
                cb_clasifProduct1.addItem(c.getNombre());
            }
            for (Object object : resultListMarca) {
                Marca m = (Marca) object;
                cb_marca1.addItem(m.getNombre());
            }
            
            for (Object object : resultListProveedor) {
                Proveedor prov = (Proveedor) object;
                cb_proveedor1.addItem(prov.getNombre());
            }
            
            String sql = " FROM Producto p order by p.idProducto asc";
            resultListProducto = ObjectModelDAO.getResultQuery(sql);
            JavaUtil.displayResult(resultListProducto, tablaModifProducto);
            tablaModifProducto.setEditable(false);
            tablaModifProducto.setRowSelectionInterval(posOr, posOr);
        }
    }//GEN-LAST:event_bModifProductoActionPerformed

    private void field_Cod_Prod_BuscadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_Cod_Prod_BuscadoKeyReleased
        if (!busy.isBusy()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tablaModifProducto.getModel());
            tablaModifProducto.setRowSorter(sorter);
            String referenciabuscada = field_Cod_Prod_Buscado.getText();
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + referenciabuscada));
        }
    }//GEN-LAST:event_field_Cod_Prod_BuscadoKeyReleased

    private void bBuscarProdModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarProdModfActionPerformed

        // tablaModifProducto.removeAll();
        Integer codigobuscado = Integer.parseInt(field_Cod_Prod_Buscado.getText());
        String hql = "FROM Producto p WHERE p.idProducto = :idProducto";
        DaoQuery q = ObjectModelDAO.createQueryDAO(hql);
        q.getQuery().setParameter("idProducto", codigobuscado);
        resultListProducto = ObjectModelDAO.getResultQuery(q);
        
        if (resultListProducto == null || resultListProducto.isEmpty()) {
            
            JOptionPane.showMessageDialog(panelModificarProducto, "No se encontró ningun producto con el N° de código" + "" + codigobuscado);
        } else {
            sw = false;
            tablaModifProducto.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_bBuscarProdModfActionPerformed

    private void bEliminProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminProductoActionPerformed
        if (pos == -1) {
            return;
        }
        
        String valor = tablaEliminarProducto.getValueAt(tablaEliminarProducto.getSelectedRow(), 0).toString();
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el"
                + " Producto " + valor
                + "?", "Información", JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION) {
            
            ObjectModelDAO.deleteObject(resultListProducto.get(pos));
            String sql = "FROM Producto p order by p.idProducto asc";
            resultListProducto = ObjectModelDAO.getResultQuery(sql);
            JavaUtil.displayResult(resultListProducto, tablaEliminarProducto);
            pos = -1;
            tablaEliminarProducto.setEditable(false);
        }
    }//GEN-LAST:event_bEliminProductoActionPerformed
    
    private void setNULLS(int swpanel) {
        
        if (swpanel == 0) {
            f_productbuscado.setText("");
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 1) {
            
            f_descripcionProducto.setText("");
            field_precioOrig.setText("");
            field_precioventa.setText("");
            f_ref_Product.setText("");
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListProducto = null;
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_marca.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 2) {
            field_externo.setText("");
            field_descrip.setText("");
            field_Cod_Prod_Buscado.setText("");
            field_precioOrig.setText("");
            field_precioalto.setText("");
            field_precioventa.setText("");
            field_codproducto.setText("");
            lb_divisionProd1.setText("");
            lb_dptoProduct1.setText("");
            field_Cod_Prod_Buscado.setText("");
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 3) {
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            resultListProducto = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
    }
    

    private void panelScrudProductoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelScrudProductoStateChanged
        
        if ((opcion_crear && panelScrudProducto.getSelectedIndex() == 1) || !opcion_crear) {
            hilo = new Thread() {
                
                @Override
                public void run() {
                    panelScrudProducto.setEnabled(false);
                    busy.setBusy(true);
                    busy.setVisible(true);
                    
                    if (panelScrudProducto.getSelectedIndex() == 0) {
                        setNULLS(0);
                        String sql = " FROM Producto p order by p.idProducto asc";
                        
                        resultListProducto = ObjectModelDAO.getResultQuery(sql);
                        
                        JavaUtil.displayResult(resultListProducto, listadoProductos);
                        listadoProductos.setEditable(false);
                        resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                        resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
                        cb_busquedaClasif.removeAllItems();
                        cb_busquedaClasif.addItem("");
                        for (Object object : resultListClasificacion) {
                            Clasificacion c = (Clasificacion) object;
                            cb_busquedaClasif.addItem(c.getNombre());
                        }
                        // cb_busquedaClasif.setSelectedIndex(-1);

                        cb_busquedaMarca.removeAllItems();
                        cb_busquedaMarca.addItem("");
                        for (Object object : resultListMarca) {
                            Marca m = (Marca) object;
                            cb_busquedaMarca.addItem(m.getNombre());
                        }
                        //  cb_busquedaMarca.setSelectedIndex(-1);
                    }
                    if (panelScrudProducto.getSelectedIndex() == 1) {
                        setNULLS(1);
                        //resultListDivision = ObjectModelDAO.getResultQuery("FROM Division d order by d.idDivision asc");
                        //resultListDepartamento = ObjectModelDAO.getResultQuery("FROM Departamento d order by d.idDepartamento asc");
                        resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                        resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
                        resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
                        cb_marca.removeAllItems();
                        cb_proveedor.removeAllItems();
                        cb_clasif.removeAllItems();
                        
                        for (Object object : resultListClasificacion) {
                            Clasificacion c = (Clasificacion) object;
                            cb_clasif.addItem(c.getNombre());
                        }
                        
                        for (Object object : resultListMarca) {
                            Marca m = (Marca) object;
                            cb_marca.addItem(m.getNombre());
                        }
                        for (Object object : resultListProveedor) {
                            Proveedor p = (Proveedor) object;
                            cb_proveedor.addItem(p.getNombre());
                        }
                        
                        lb_divisionProd.setText(((Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex())).getIdDepartamento().getIdDivision().getNombre());
                        lb_dptoProduct.setText(((Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex())).getIdDepartamento().getNombre());
                        if (productoParam != null) {
                            f_descripcionProducto.setText(productoParam.getDescripcion());
                            f_ref_Product.setText(productoParam.getReferenciaProducto());
                            f_precio_orig.setText(productoParam.getPrecioOriginal() + "");
                            if (productoParam.getIdProveedor() != null) {
                                cb_proveedor.setSelectedItem(productoParam.getIdProveedor().getNombre());
                                //cb_proveedor.setSelectedIndex(cb_proveedor.getSelectedIndex() - 1);
                            }
                            opcion_crear = false;
                        }
                        
                    }
                    
                    if (panelScrudProducto.getSelectedIndex() == 2) {
                        setNULLS(2);
                        //resultListDivision = ObjectModelDAO.getResultQuery("FROM Division d order by d.idDivision asc");
                        //resultListDepartamento = ObjectModelDAO.getResultQuery("FROM Departamento d order by d.idDepartamento asc");
                        resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                        resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
                        resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
                        //            cb_marca1.removeAllItems();
                        //            cb_proveedor1.removeAllItems();
                        //            cb_clasifProduct1.removeAllItems();

                        for (Object object : resultListClasificacion) {
                            Clasificacion c = (Clasificacion) object;
                            cb_clasifProduct1.addItem(c.getNombre());
                        }
                        
                        for (Object object : resultListMarca) {
                            Marca m = (Marca) object;
                            cb_marca1.addItem(m.getNombre());
                        }
                        for (Object object : resultListProveedor) {
                            Proveedor p = (Proveedor) object;
                            cb_proveedor1.addItem(p.getNombre());
                        }
                        if (sw) {//sino ha buscado..
                            String sql = "FROM Producto p order by p.idProducto asc";
                            resultListProducto = ObjectModelDAO.getResultQuery(sql);
                        } else {
                            sw = true;
                        }
                        JavaUtil.displayResult(resultListProducto, tablaModifProducto);
                        tablaModifProducto.setEditable(false);
                        pos = -1;
                        cb_clasifProduct1.setSelectedIndex(pos);
                        cb_marca1.setSelectedIndex(pos);
                        cb_proveedor1.setSelectedIndex(pos);
                    }
                    
                    if (panelScrudProducto.getSelectedIndex() == 3) {
                        setNULLS(3);
                        String sql = "FROM Producto p order by p.idProducto asc";
                        resultListProducto = ObjectModelDAO.getResultQuery(sql);
                        
                        JavaUtil.displayResult(resultListProducto, tablaEliminarProducto);
                        pos = -1;
                        tablaEliminarProducto.setEditable(false);
                        
                    }
                    busy.setBusy(false);
                    busy.setVisible(false);
                    panelScrudProducto.setEnabled(true);
                }
                
            };
            
            hilo.start();
        }
        //  JOptionPane.showMessageDialog(this, "que paso!!");
    }//GEN-LAST:event_panelScrudProductoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDproducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDproducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDproducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDproducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDproducto dialog = new JDproducto(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscarProdModf;
    private javax.swing.JButton bCrearClasif;
    private javax.swing.JButton bCrearMarca;
    private javax.swing.JButton bCrearProducto;
    private javax.swing.JButton bCrearProveedor;
    private javax.swing.JButton bEliminProducto;
    private javax.swing.JButton bModifProducto;
    private javax.swing.JButton b_buscarproduct;
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JComboBox cb_busquedaClasif;
    private javax.swing.JComboBox cb_busquedaMarca;
    private javax.swing.JComboBox cb_clasif;
    private javax.swing.JComboBox cb_clasifProduct1;
    private javax.swing.JComboBox cb_marca;
    private javax.swing.JComboBox cb_marca1;
    private javax.swing.JComboBox cb_proveedor;
    private javax.swing.JComboBox cb_proveedor1;
    private javax.swing.JTextField f_descripcionProducto;
    private javax.swing.JTextField f_precio_orig;
    private javax.swing.JTextField f_productbuscado;
    private javax.swing.JTextField f_ref_Product;
    private javax.swing.JTextField field_Cod_Prod_Buscado;
    private javax.swing.JTextField field_codproducto;
    private javax.swing.JTextField field_descrip;
    private javax.swing.JTextField field_externo;
    private javax.swing.JTextField field_precioOrig;
    private javax.swing.JTextField field_precioalto;
    private javax.swing.JTextField field_precioventa;
    private javax.swing.JTextField field_ref;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lb_divisionProd;
    private javax.swing.JLabel lb_divisionProd1;
    private javax.swing.JLabel lb_dptoProduct;
    private javax.swing.JLabel lb_dptoProduct1;
    private org.jdesktop.swingx.JXTable listadoProductos;
    private javax.swing.JPanel panelConsulta;
    private javax.swing.JPanel panelCrearProducto;
    private javax.swing.JPanel panelEliminarProducto;
    private javax.swing.JPanel panelModificarProducto;
    private javax.swing.JTabbedPane panelScrudProducto;
    private org.jdesktop.swingx.JXTable tablaEliminarProducto;
    private org.jdesktop.swingx.JXTable tablaModifProducto;
    // End of variables declaration//GEN-END:variables
}
