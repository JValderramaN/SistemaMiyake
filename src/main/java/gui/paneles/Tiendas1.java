/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.paneles;

import gui.dialogos.JDsalidaParaTiendaPendientes;
import gui.dialogos.JDSalidadParaTiendasProductos;
import gui.ventanas.JFInicioSecionMiyake;
import gui.ventanas.FventanaIncial;
import util.almacen.DetalleRegistro;
import modelos.tablas.ModeloTablaDetalleRegistroTomaFisicaTiendas;
import hibernate.DAO.ObjectModelDAO;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.OptionPaneUI;
import modelos.mapeos.Almacen;
import modelos.mapeos.ConteoMercanciaEntrada;
import modelos.mapeos.ConteoMercanciaEntradaDetalles;
import modelos.mapeos.ConteoMercanciaEntradaDetallesPK;
import modelos.mapeos.InventarioTienda;
import modelos.mapeos.InventarioTiendaPK;
import modelos.mapeos.NotaCreditoDebito;
import modelos.mapeos.NotaCreditoDebitoDetalle;
import modelos.mapeos.SalidaParaTienda;
import modelos.mapeos.SalidaParaTiendaDetalle;
import modelos.mapeos.Usuario;
import util.JavaUtil;

/**
 *
 * @author Pablo
 */
public class Tiendas1 extends javax.swing.JPanel {

    Usuario user = JFInicioSecionMiyake.us1;
    Usuario ususrioActual = null;
    Almacen almacenActual = null;
    Usuario u = null;
    NotaCreditoDebito faltante = null;
    NotaCreditoDebito sobrante = null;
//Listas

    List resultListAlmacen = null;
    List listaprodSA = null;
    List<DetalleRegistro> listaDetalle = new ArrayList<>();

    SalidaParaTiendaDetalle sd = null;
    private DetalleRegistro deReg;
    private SalidaParaTienda sa = null;

    //  InventarioTienda inv = null;
    int posUs = -1;
    int posAl = -1;
    int Conteofaltante = 0;

    ModeloTablaDetalleRegistroTomaFisicaTiendas modeloTablaTomaFisicaInventarioTiendas = new ModeloTablaDetalleRegistroTomaFisicaTiendas();

    // private SalidaParaTiendaDetalle sd = null;
    /**
     * Creates new form NewJPanel
     */
    public Tiendas1() {
        initComponents();
        //ComboBoxAlmacenes
        this.jTDetalleRegistroTiendas.setModel(modeloTablaTomaFisicaInventarioTiendas);
        String sql = "FROM Almacen a order by a.idAlmacen asc";
        resultListAlmacen = ObjectModelDAO.getResultQuery(sql);
        comboBoxAlmacen.removeAllItems();

        for (Object object : resultListAlmacen) {
            Almacen a = (Almacen) object;

            comboBoxAlmacen.addItem(a.getNombre()
                    + " TLF:" + a.getTelefono1()
            );

        }

        //Usuarios
        List<List> resultListUsuarios = FventanaIncial.listaUsuarioMain;
        comboBoxUsuarios.removeAllItems();
        for (Object object : resultListUsuarios) {
            Usuario u = (Usuario) object;
            comboBoxUsuarios.addItem(u.getNombre() + " :" + u.getDescripcion());

        }
        this.comboBoxAlmacen.setSelectedIndex(-1);
        this.comboBoxUsuarios.setSelectedIndex(-1);
        this.busy.setVisible(false);
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Tiendas1().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTextField2 = new org.jdesktop.swingx.JXTextField();
        jXTextField4 = new org.jdesktop.swingx.JXTextField();
        dialogoMostrarNotas = new javax.swing.JDialog();
        btNC = new javax.swing.JButton();
        btND = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLayeredPanePrincipal = new javax.swing.JLayeredPane();
        busy = new org.jdesktop.swingx.JXBusyLabel();
        jXTaskPaneLCabeceraTiendas = new org.jdesktop.swingx.JXTaskPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLayeredPaneTienda = new javax.swing.JLayeredPane();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        botonConfirmarFactura = new org.jdesktop.swingx.JXButton();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        comboBoxAlmacen = new javax.swing.JComboBox();
        comboBoxUsuarios = new javax.swing.JComboBox();
        botonReiniciarTodoDesdeFActura = new org.jdesktop.swingx.JXButton();
        jButtonListarPedidos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEmitidoPor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSalidaID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        txtSalidaIDFecha = new org.jdesktop.swingx.JXTextField();
        txtTiendaDesde = new org.jdesktop.swingx.JXTextField();
        txtEstatus = new org.jdesktop.swingx.JXTextField();
        jXLabel12 = new org.jdesktop.swingx.JXLabel();
        jXLabel13 = new org.jdesktop.swingx.JXLabel();
        jXLabel14 = new org.jdesktop.swingx.JXLabel();
        txtTotalSalidaID = new org.jdesktop.swingx.JXTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLayeredPaneProductos = new javax.swing.JLayeredPane();
        jLayeredPaneBuscarProducto = new javax.swing.JLayeredPane();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        txtBusqueda = new org.jdesktop.swingx.JXTextField();
        jXButtonBuscar = new org.jdesktop.swingx.JXButton();
        comboBoxTipoBusqueda = new javax.swing.JComboBox();
        botonListarProductosInventariTienda = new org.jdesktop.swingx.JXButton();
        jLayeredPaneDatosProductos = new javax.swing.JLayeredPane();
        txtDescripcion = new org.jdesktop.swingx.JXTextField();
        txtCantidadSugeridad = new org.jdesktop.swingx.JXTextField();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        txtReferencia = new org.jdesktop.swingx.JXTextField();
        txtCodigo = new org.jdesktop.swingx.JXTextField();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        labelReferencia = new org.jdesktop.swingx.JXLabel();
        botonAgregar = new org.jdesktop.swingx.JXButton();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        txtMarca = new org.jdesktop.swingx.JXTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        txtCantidad = new org.jdesktop.swingx.JXTextField();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtNroBulto = new org.jdesktop.swingx.JXTextField();
        jXLabel11 = new org.jdesktop.swingx.JXLabel();
        txtRenglon = new org.jdesktop.swingx.JXTextField();
        jSeparator2 = new javax.swing.JSeparator();
        botonLimpiarAgregar = new org.jdesktop.swingx.JXButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTDetalleRegistroTiendas = new javax.swing.JTable();
        botonTotalizar = new org.jdesktop.swingx.JXButton();
        botonGenerarNotas = new org.jdesktop.swingx.JXButton();
        jButtonGuardarConteo = new org.jdesktop.swingx.JXButton();
        botonImprimir = new org.jdesktop.swingx.JXButton();
        botonCencelarAgregar = new org.jdesktop.swingx.JXButton();

        jXTextField2.setText("jXTextField2");

        jXTextField4.setText("jXTextField4");

        dialogoMostrarNotas.setModal(true);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        Point p= new Point(
            (int) ((d.getWidth() - dialogoMostrarNotas.getWidth()) / 2),
            (int) ((d.getHeight() - dialogoMostrarNotas.getHeight()) / 2));
        dialogoMostrarNotas.setLocation(p);

        btNC.setText("Mostrar Nota de Crédito");
        btNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNCActionPerformed(evt);
            }
        });

        btND.setText("Mostrar Nota de Débito");
        btND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogoMostrarNotasLayout = new javax.swing.GroupLayout(dialogoMostrarNotas.getContentPane());
        dialogoMostrarNotas.getContentPane().setLayout(dialogoMostrarNotasLayout);
        dialogoMostrarNotasLayout.setHorizontalGroup(
            dialogoMostrarNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoMostrarNotasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogoMostrarNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btND, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNC, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogoMostrarNotasLayout.setVerticalGroup(
            dialogoMostrarNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoMostrarNotasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btND)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setAutoscrolls(true);

        busy.setBusy(true);
        busy.setText("GUARDANDO!!!");
        busy.setEnabled(false);
        busy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jXTaskPaneLCabeceraTiendas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1416789183_data-16.png"))); // NOI18N
        jXTaskPaneLCabeceraTiendas.setTitle("Detalle de Factura");

        jScrollPane3.setPreferredSize(new java.awt.Dimension(800, 800));

        jLayeredPaneTienda.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar Factura"));
        jLayeredPaneTienda.setPreferredSize(new java.awt.Dimension(610, 130));

        jXLabel2.setText("Responsable");

        botonConfirmarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/conect.png"))); // NOI18N
        botonConfirmarFactura.setText("Confirmar");
        botonConfirmarFactura.setEnabled(false);
        botonConfirmarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarFacturaActionPerformed(evt);
            }
        });

        jXLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/distribuidora.png"))); // NOI18N
        jXLabel1.setText("Almacen");

        comboBoxAlmacen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxAlmacen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxAlmacenItemStateChanged(evt);
            }
        });
        comboBoxAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAlmacenActionPerformed(evt);
            }
        });

        comboBoxUsuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        botonReiniciarTodoDesdeFActura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/reiniciar.png"))); // NOI18N
        botonReiniciarTodoDesdeFActura.setText("Reiniciar");
        botonReiniciarTodoDesdeFActura.setEnabled(false);
        botonReiniciarTodoDesdeFActura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarTodoDesdeFActuraActionPerformed(evt);
            }
        });

        jButtonListarPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/confirmar.png"))); // NOI18N
        jButtonListarPedidos.setText("Seleccionar Pedidos Pendientes");
        jButtonListarPedidos.setEnabled(false);
        jButtonListarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarPedidosActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/facturas.png"))); // NOI18N
        jLabel2.setText(" Pedidos Pendientes:");

        txtEmitidoPor.setEditable(false);
        txtEmitidoPor.setEnabled(false);
        txtEmitidoPor.setMinimumSize(new java.awt.Dimension(40, 22));
        txtEmitidoPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmitidoPorActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/responsable2.png"))); // NOI18N
        jLabel8.setText("Emitido Por");

        txtSalidaID.setEditable(false);
        txtSalidaID.setEnabled(false);
        txtSalidaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalidaIDActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1416789267_clean.png"))); // NOI18N
        jLabel9.setText("ID");

        jXLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/fecha.png"))); // NOI18N
        jXLabel10.setText("Fecha");

        txtSalidaIDFecha.setEditable(false);
        txtSalidaIDFecha.setEnabled(false);

        txtTiendaDesde.setEditable(false);

        txtEstatus.setEditable(false);
        txtEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstatusActionPerformed(evt);
            }
        });

        jXLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1417636330_store.png"))); // NOI18N
        jXLabel12.setText("Tienda");

        jXLabel13.setText("Estatus");

        jXLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1418331222_coins.png"))); // NOI18N
        jXLabel14.setText("Total");

        txtTotalSalidaID.setEditable(false);

        javax.swing.GroupLayout jLayeredPaneTiendaLayout = new javax.swing.GroupLayout(jLayeredPaneTienda);
        jLayeredPaneTienda.setLayout(jLayeredPaneTiendaLayout);
        jLayeredPaneTiendaLayout.setHorizontalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxAlmacen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonListarPedidos, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))
                            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                        .addComponent(jXLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTiendaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jXLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(9, 9, 9)
                                        .addComponent(jXLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSalidaID)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(txtEmitidoPor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(txtTotalSalidaID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtSalidaIDFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonReiniciarTodoDesdeFActura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonConfirmarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jLayeredPaneTiendaLayout.setVerticalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListarPedidos)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtSalidaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtEmitidoPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSalidaIDFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTiendaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalSalidaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonReiniciarTodoDesdeFActura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addComponent(botonConfirmarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addGap(0, 0, 0))
        );
        jLayeredPaneTienda.setLayer(jXLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(botonConfirmarFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxAlmacen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxUsuarios, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(botonReiniciarTodoDesdeFActura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jButtonListarPedidos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtEmitidoPor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtSalidaID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtSalidaIDFecha, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtTiendaDesde, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtEstatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtTotalSalidaID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setViewportView(jLayeredPaneTienda);

        javax.swing.GroupLayout jXTaskPaneLCabeceraTiendasLayout = new javax.swing.GroupLayout(jXTaskPaneLCabeceraTiendas.getContentPane());
        jXTaskPaneLCabeceraTiendas.getContentPane().setLayout(jXTaskPaneLCabeceraTiendasLayout);
        jXTaskPaneLCabeceraTiendasLayout.setHorizontalGroup(
            jXTaskPaneLCabeceraTiendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jXTaskPaneLCabeceraTiendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE))
        );
        jXTaskPaneLCabeceraTiendasLayout.setVerticalGroup(
            jXTaskPaneLCabeceraTiendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
            .addGroup(jXTaskPaneLCabeceraTiendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jXTaskPaneLCabeceraTiendasLayout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jScrollPane4.setAutoscrolls(true);

        jLayeredPaneProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles de Productos"));
        jLayeredPaneProductos.setToolTipText("Presione F1 para Ayuda");
        jLayeredPaneProductos.setAutoscrolls(true);

        jLayeredPaneBuscarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        jXLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/tipo.png"))); // NOI18N
        jXLabel7.setText("Tipo Busqueda");

        txtBusqueda.setForeground(new java.awt.Color(212, 208, 200));
        txtBusqueda.setEnabled(false);
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        jXButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/buscar2.png"))); // NOI18N
        jXButtonBuscar.setText("Buscar");
        jXButtonBuscar.setEnabled(false);
        jXButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonBuscarActionPerformed(evt);
            }
        });

        comboBoxTipoBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo SKU", "Referencia" }));
        comboBoxTipoBusqueda.setEnabled(false);
        comboBoxTipoBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxTipoBusquedaItemStateChanged(evt);
            }
        });

        botonListarProductosInventariTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/productos.png"))); // NOI18N
        botonListarProductosInventariTienda.setText("Productos");
        botonListarProductosInventariTienda.setEnabled(false);
        botonListarProductosInventariTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarProductosInventariTiendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneBuscarProductoLayout = new javax.swing.GroupLayout(jLayeredPaneBuscarProducto);
        jLayeredPaneBuscarProducto.setLayout(jLayeredPaneBuscarProductoLayout);
        jLayeredPaneBuscarProductoLayout.setHorizontalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jLayeredPaneBuscarProductoLayout.setVerticalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jLayeredPaneBuscarProducto.setLayer(jXLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(txtBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(jXButtonBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(comboBoxTipoBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(botonListarProductosInventariTienda, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneDatosProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Producto"));

        txtDescripcion.setEditable(false);
        txtDescripcion.setEnabled(false);

        txtCantidadSugeridad.setEditable(false);
        txtCantidadSugeridad.setEnabled(false);

        jXLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/stock.png"))); // NOI18N
        jXLabel6.setText("Sugerido");

        txtReferencia.setEditable(false);
        txtReferencia.setDisabledTextColor(new java.awt.Color(212, 208, 200));
        txtReferencia.setEnabled(false);

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);

        jXLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/etiquetas.png"))); // NOI18N
        jXLabel3.setText("CodigoSKU");

        jXLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/descripcion.png"))); // NOI18N
        jXLabel5.setText("Descripcion");

        labelReferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/codigo1.png"))); // NOI18N
        labelReferencia.setText("Referencia");

        botonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/agregar1.png"))); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.setEnabled(false);
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        jXLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/marca1.png"))); // NOI18N
        jXLabel4.setText("Marca");

        txtMarca.setEditable(false);
        txtMarca.setEnabled(false);

        jXLabel8.setText("Cantidad");

        txtCantidad.setEnabled(false);
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jXLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/bulto.png"))); // NOI18N
        jXLabel9.setText("Bulto");

        txtNroBulto.setEditable(false);
        txtNroBulto.setEnabled(false);

        jXLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/renglon.png"))); // NOI18N
        jXLabel11.setText("Renglon");

        txtRenglon.setEditable(false);
        txtRenglon.setEnabled(false);
        txtRenglon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRenglonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        botonLimpiarAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/limpiar.png"))); // NOI18N
        botonLimpiarAgregar.setText("Limpiar");
        botonLimpiarAgregar.setEnabled(false);
        botonLimpiarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneDatosProductosLayout = new javax.swing.GroupLayout(jLayeredPaneDatosProductos);
        jLayeredPaneDatosProductos.setLayout(jLayeredPaneDatosProductosLayout);
        jLayeredPaneDatosProductosLayout.setHorizontalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                                .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                                .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                                .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                                .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNroBulto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRenglon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantidadSugeridad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPaneDatosProductosLayout.setVerticalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jXLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCantidadSugeridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNroBulto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRenglon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        jLayeredPaneDatosProductos.setLayer(txtDescripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCantidadSugeridad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(labelReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtMarca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtNroBulto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtRenglon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonLimpiarAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane5.setAutoscrolls(true);

        jTDetalleRegistroTiendas.setAutoCreateRowSorter(true);
        jTDetalleRegistroTiendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTDetalleRegistroTiendas.setToolTipText("Para Eliminar Precione La tecla \"Supr\"");
        jTDetalleRegistroTiendas.setCellSelectionEnabled(true);
        jTDetalleRegistroTiendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDetalleRegistroTiendasKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jTDetalleRegistroTiendas);

        botonTotalizar.setText("Totalizar");
        botonTotalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTotalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneProductosLayout = new javax.swing.GroupLayout(jLayeredPaneProductos);
        jLayeredPaneProductos.setLayout(jLayeredPaneProductosLayout);
        jLayeredPaneProductosLayout.setHorizontalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLayeredPaneBuscarProducto)
            .addComponent(jLayeredPaneDatosProductos)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneProductosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonTotalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPaneProductosLayout.setVerticalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneProductosLayout.createSequentialGroup()
                .addComponent(jLayeredPaneBuscarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneDatosProductos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonTotalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jLayeredPaneProductos.setLayer(jLayeredPaneBuscarProducto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jLayeredPaneDatosProductos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(botonTotalizar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane4.setViewportView(jLayeredPaneProductos);

        botonGenerarNotas.setText("Mostrar Notas");
        botonGenerarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarNotasActionPerformed(evt);
            }
        });

        jButtonGuardarConteo.setText("Guardar");
        jButtonGuardarConteo.setEnabled(false);
        jButtonGuardarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarConteoActionPerformed(evt);
            }
        });

        botonImprimir.setText("Imprimir");
        botonImprimir.setEnabled(false);
        botonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirActionPerformed(evt);
            }
        });

        botonCencelarAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/limpiar.png"))); // NOI18N
        botonCencelarAgregar.setText("Reiniciar");
        botonCencelarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCencelarAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPanePrincipalLayout = new javax.swing.GroupLayout(jLayeredPanePrincipal);
        jLayeredPanePrincipal.setLayout(jLayeredPanePrincipalLayout);
        jLayeredPanePrincipalLayout.setHorizontalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                                .addComponent(botonCencelarAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonGenerarNotas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonGuardarConteo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPanePrincipalLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jXTaskPaneLCabeceraTiendas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPanePrincipalLayout.setVerticalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jXTaskPaneLCabeceraTiendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonGenerarNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGuardarConteo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCencelarAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jLayeredPanePrincipal.setLayer(busy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(jXTaskPaneLCabeceraTiendas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(botonGenerarNotas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(jButtonGuardarConteo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(botonImprimir, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(botonCencelarAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane2.setViewportView(jLayeredPanePrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonConfirmarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarFacturaActionPerformed

        try {
            posUs = this.comboBoxUsuarios.getSelectedIndex();
            posAl = this.comboBoxAlmacen.getSelectedIndex();
            if (posUs != -1 && posAl != -1) {
                String hql = "SELECT sd FROM SalidaParaTiendaDetalle sd WHERE sd.salidaParaTienda=" + sa.getIdSalida();
                listaprodSA = ObjectModelDAO.getResultQuery(hql);
//            this.inventarioTienda = (List<InventarioTienda>) (InventarioTienda) this.resultListInventarioTienda;
//            for (List listaInventarioTienda : resultListInventarioTienda) {
//                System.err.println("Los datos son : " + listaInventarioTienda);
//            }
                // this.jLayeredPaneBuscarProducto.setEnabled(true)
                this.comboBoxTipoBusqueda.setEnabled(true);
                this.txtBusqueda.setEnabled(true);
                this.txtBusqueda.requestFocus();
                this.jXButtonBuscar.setEnabled(true);
                this.botonListarProductosInventariTienda.setEnabled(true);
                this.jButtonListarPedidos.setEnabled(false);

                this.comboBoxUsuarios.setEnabled(false);
                this.comboBoxAlmacen.setEnabled(false);
                this.botonConfirmarFactura.setEnabled(false);
                this.botonReiniciarTodoDesdeFActura.setEnabled(true);
                jXTaskPaneLCabeceraTiendas.setCollapsed(true);
            } else {
                JOptionPane.showMessageDialog(null, "Debe Selecionar Todos Los Datos");
            }
        } catch (Exception e) {
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Excepcion Al Confirmar Pedido: " + e);
            System.err.println("ERROR en EVENTO BOTON CONFIRMAR Pedido : " + e);
        }

    }//GEN-LAST:event_botonConfirmarFacturaActionPerformed

    private void comboBoxAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAlmacenActionPerformed


    }//GEN-LAST:event_comboBoxAlmacenActionPerformed

    private void botonListarProductosInventariTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarProductosInventariTiendaActionPerformed

        try {
            JDSalidadParaTiendasProductos jdProductosSD
                    = new JDSalidadParaTiendasProductos(null, true,
                            this.listaprodSA);
            jdProductosSD.setLocationRelativeTo(null);
            jdProductosSD.setVisible(true);

            if (jdProductosSD.sd == null) {
                JOptionPane.showMessageDialog(this, "No ha Seleccioado Producto");
            } else {
                this.sd = (SalidaParaTiendaDetalle) jdProductosSD.sd;
                //****************AQUI Dierecciona los valores****************

                this.txtCodigo.setText(sd.getProducto().getIdProducto().toString());
                this.txtCodigo.setEnabled(true);
                this.txtDescripcion.setText(sd.getProducto().getDescripcion());
                this.txtDescripcion.setEnabled(true);
                this.txtReferencia.setText(sd.getProducto().getReferenciaProducto());
                this.txtReferencia.setEnabled(true);
                this.txtMarca.setText(sd.getProducto().getIdMarca().getNombre());
                this.txtMarca.setEnabled(true);
                Integer cant_debe = sd.getCantidadProducto();
                this.txtCantidadSugeridad.setText(cant_debe.toString());
                this.txtCantidadSugeridad.setEnabled(true);
                this.txtRenglon.setText(sd.getNroBulto().toString());
                this.txtRenglon.setEnabled(true);
                this.txtNroBulto.setText(sd.getNroBulto().toString());
                this.txtNroBulto.setEnabled(true);
                this.txtCantidad.setEnabled(true);
                this.txtCantidad.requestFocus();
                botonAgregar.setEnabled(true);

                botonLimpiarAgregar.setEnabled(true);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Excepcion al cargar Lista de Facturas" + ex);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_botonListarProductosInventariTiendaActionPerformed

    private void jXButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonBuscarActionPerformed

        try {

            if ("".equals(this.txtBusqueda.getText())) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Atributo de Busqueda Por Favor!!!");
            } else {
                int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
                List<SalidaParaTiendaDetalle> listaProductos = this.listaprodSA;
                switch (pos) {
                    case 0:
                        int codigoSKU = Integer.parseInt(this.txtBusqueda.getText());
                        for (SalidaParaTiendaDetalle lista : listaProductos) {
                            if (lista.getProducto().getIdProducto().equals(codigoSKU)) {
                                this.txtCodigo.setText(lista.getProducto().getIdProducto().toString());
                                this.txtCodigo.setEnabled(true);
                                this.txtReferencia.setText(lista.getProducto().getReferenciaProducto());
                                this.txtReferencia.setEnabled(true);
                                this.txtDescripcion.setText(lista.getProducto().getDescripcion());
                                this.txtDescripcion.setEnabled(true);
                                this.txtMarca.setText(lista.getProducto().getIdMarca().getNombre());
                                this.txtMarca.setEnabled(true);
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonCencelarAgregar.setEnabled(true);

                            } else {
                                JOptionPane.showMessageDialog(null, "¡¡¡La Busqueda No Arrojo Ningun Resultados!!!\n"
                                        + "Verifique los Datos de Buqueda y Vuelva a Intentarlo.");

                            }

                        }
                        break;
                    case 1:
                        String referencia = this.txtBusqueda.getText();
                        for (SalidaParaTiendaDetalle lista : listaProductos) {
                            if (lista.getProducto().getReferenciaProducto().equalsIgnoreCase(referencia)) {
                                this.txtCodigo.setText(lista.getProducto().getIdProducto().toString());
                                this.txtReferencia.setText(lista.getProducto().getReferenciaProducto());
                                this.txtDescripcion.setText(lista.getProducto().getDescripcion());
                                this.txtMarca.setText(lista.getProducto().getIdMarca().getNombre());
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonCencelarAgregar.setEnabled(true);
                            } else {
                                JOptionPane.showMessageDialog(null, "¡¡¡La Busqueda No Arrojo Ningun Resultados!!!\n"
                                        + "Verifique los Datos de Buqueda y Vuelva a Intentarlo.");

                            }

                        }
                        break;
                }
            }

        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Excepcion en la Busqueda : " + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_jXButtonBuscarActionPerformed

    private void jButtonGuardarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarConteoActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                jButtonGuardarConteo.setEnabled(false);
                busy.setEnabled(true);
                busy.setVisible(true);
                busy.setBusy(true);
                InventarioTienda id_in = null;
                Float totalCosto = 0f;
                float totalNotaC = 0f;
                float totalNotaD = 0f;
                try {
                    ConteoMercanciaEntrada cab = new ConteoMercanciaEntrada(almacenActual, user, sa);
                    Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
                    if (id_creado_cabecera != -1) {//se creo

                        for (DetalleRegistro dr : listaDetalle) {

                            //Crear Objeto PK_DeatllesConteo 
                            ConteoMercanciaEntradaDetallesPK detallePK = new ConteoMercanciaEntradaDetallesPK(
                                    dr.getSd().getProducto().getIdProducto(),
                                    id_creado_cabecera);

                            //Crear Objeto DeatllesConteo
                            ConteoMercanciaEntradaDetalles detalle = new ConteoMercanciaEntradaDetalles(
                                    detallePK,
                                    dr.getConteoFaltante(),
                                    dr.getTotalFaltante(),
                                    dr.getBulto(),
                                    dr.getCantidad(),
                                    cab,
                                    dr.getSd().getProducto()
                            );

                            //Guardando Cabecera y Detalles de Toma Fisica 
                            try {
                                Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                                if (id_creado_detalle instanceof ConteoMercanciaEntradaDetallesPK
                                        && ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle) == null) {
                                    System.err.println("Excepcion ó Exitos AL CREAR REGISTRO DETALLES "
                                            + ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle).toString());
                                } else {//se creo
                                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");

                                }

                            } catch (Exception e) {
                                System.err.println("Excepcion CON PK_Detalle : " + e);
                            }

                            //Guardando Inventario del Almacen Hasta donde fue Asignada La Mercancia
                            try {
                                //Guaradar InventarioPK
                                System.err.println("Creando PK inventario");
                                InventarioTiendaPK inventarioPK = new InventarioTiendaPK(
                                        dr.getSd().getProducto().getIdProducto(),
                                        almacenActual.getIdAlmacen()
                                );
                                //Guaradar Inventariodel Almacen Hasta donde fue Asignada La Mercancia
                                id_in = ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class);
                                System.err.println("ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class) es: " + id_in);
                                if (id_in == null) {
                                    System.err.println("CREANDO Inventartio Tienda IF(Guaradar Inventario) id_in is null");
                                    //Sino existe lo Crea
                                    id_in = new InventarioTienda(
                                            inventarioPK,
                                            dr.getCantidad(),
                                            almacenActual,
                                            dr.getSd().getProducto()
                                    );
                                    //Inexistente
                                    id_in.setPrecioSinDescuento(dr.getSd().getProducto().getPrecioOriginal());
                                    id_in.setPrecioConDescuento(dr.getSd().getProducto().getPrecioOriginal());
                                    id_in.setDescuento(0);
                                    id_in.setProcesado(id_in.getProcesado() - dr.getCantidad());
                                    //Alualiza Cantidad Inexistente
                                    id_in.setCantidad(id_in.getCantidad() + dr.getCantidad());
                                    id_in.setAsignado(Boolean.TRUE);

                                    detalle.setTotalFaltante(dr.getCantidad() * dr.getSd().getProducto().getPrecioOriginal());
                                    totalCosto += detalle.getTotalFaltante();

                                    Object id_creado_inventario = ObjectModelDAO.saveObject(id_in);

                                    if (id_creado_inventario instanceof InventarioTiendaPK
                                            && ((InventarioTiendaPK) id_creado_inventario) == null) {
                                        System.err.println("1 Excepcion!!! REGISTRANDO DATOS EN INVENTARIOPK");
                                    } else {
                                        System.err.println("0 Exito¡¡¡ REGISTRANDO DATOS EN INVENTARIOPK");
                                    }
                                } else {
                                    // id_in.setPrecio(dr.ep.getIdProducto().getPrecioOriginal());
                                    //id_in.setDescuento(0f);
                                    //*****************************************************************
                                    //Atualiza la mercancia en el Almacen Hasta donde se Asigna la mercancia
                                    id_in.setCantidad(id_in.getCantidad() + dr.getCantidad());
                                    id_in.setAsignado(Boolean.TRUE);
                                    //----------- ACA ERROR PROCESADO DA NEGATIVO
                                    id_in.setProcesado(id_in.getProcesado() - dr.getCantidad());
//                                    if(id_in.getCantidad()==0){
//                                        
//                                        id_in.setVacio(Boolean.TRUE);
//                                    }else{
//                                         id_in.setAsignado(Boolean.TRUE);
//                                        id_in.setdVacio(Boolean.FALSE);
//                                    }
//                                    
                                    detalle.setTotalFaltante(dr.getCantidad() * id_in.getPrecioSinDescuento());
                                    totalCosto += detalle.getTotalFaltante();
                                    ObjectModelDAO.updateObject(id_in);
                                    //Cambiar Estado Salida Para Tienda
                                    sa.setRevisado(Boolean.TRUE);
                                    ObjectModelDAO.updateObject(sa);
                                    System.err.println("Actualizando Inventario de Producto Existente");
                                }
                            } catch (Exception e) {
                                System.err.println("Excepcion GUARDANDO EN INVENTARIO : " + e);
                            }

                            ObjectModelDAO.updateObject(dr.getSd());

                            // <editor-fold defaultstate="collapsed" desc="***NOTAS CD">
                            if (dr.getConteoFaltante() != 0) {
                                NotaCreditoDebitoDetalle ncdd = null;
                                //Es menor el Salida Para Tienda Detalle a lo que introduce el user
                                //(NOTA FALTANTE o de DEBITO)*************************************
                                if (dr.getConteoFaltante() < 0) {
                                    if (faltante == null) {
                                        faltante = new NotaCreditoDebito(false, sa, user);
                                        ObjectModelDAO.saveObject(faltante);
                                    }
                                    ncdd = new NotaCreditoDebitoDetalle(
                                            Math.abs(dr.getConteoFaltante()),
                                            dr.getSd().getNroRenglon(),
                                            faltante,
                                            dr.getSd().getProducto()
                                    );

                                    totalNotaD += ncdd.getCantidadProducto() * id_in.getPrecioSinDescuento();
                                }
                                //Es Mayor el Salida Para Tienda Detalle a lo que introduce el user
                                //(NOTA SOBRANTE o de CREDITO)*************************************
                                if (dr.getConteoFaltante() > 0) {
                                    if (sobrante == null) {
                                        sobrante = new NotaCreditoDebito(true, sa, user);
                                        ObjectModelDAO.saveObject(sobrante);
                                    }
                                    ncdd = new NotaCreditoDebitoDetalle(
                                            Math.abs(dr.getConteoFaltante()),
                                            dr.getSd().getNroRenglon(),
                                            sobrante,
                                            dr.getSd().getProducto()
                                    );

                                    totalNotaC += ncdd.getCantidadProducto() * id_in.getPrecioSinDescuento();

                                }

                                ObjectModelDAO.saveObject(ncdd);
                            }
                            // </editor-fold> 
                        }

                    }

                    // <editor-fold defaultstate="collapsed" desc="***NOTAS CD">
                    if (sobrante != null) {
                        sobrante.setTotal(totalNotaC);
                        ObjectModelDAO.updateObject(sobrante);
                    }
                    if (faltante != null) {
                        faltante.setTotal(totalNotaD);
                        ObjectModelDAO.updateObject(faltante);
                    }
                    // </editor-fold> 

                    cab.setTotalConteo(totalCosto);
                    ObjectModelDAO.updateObject(cab);
                    sa.setRevisado(Boolean.TRUE);
                    ObjectModelDAO.updateObject(sa);
                    //busys
                    busy.setEnabled(false);
                    busy.setVisible(false);
                    busy.setBusy(false);

                    //Validar y Verificar queLa sa NO Cambie el 
                    //Mensaje Registro Guardado
                    int respuesta = JOptionPane.showConfirmDialog(null, "El Registro se Guardo Exitosamente...!!! \n ¿Desea Agregar Otra Factura?",
                            "COMPROBACION DE REGISTROS", JOptionPane.YES_NO_OPTION);

                    if (respuesta == JOptionPane.YES_OPTION) {
                        jButtonGuardarConteo.setEnabled(true);
                        //Limpiar Tabla y Lista
                        listaDetalle.clear();
                        jTDetalleRegistroTiendas.removeAll();
                        modeloTablaTomaFisicaInventarioTiendas.fireTableDataChanged();
                        //Desabilitar Controles
                        txtCantidad.setEnabled(false);

                        //jLayeredPaneBuscarProducto.setEnabled(false);
                        comboBoxTipoBusqueda.setEnabled(false);
                        txtBusqueda.setEnabled(false);
                        jXButtonBuscar.setEnabled(false);
                        botonListarProductosInventariTienda.setEnabled(false);
                        jButtonListarPedidos.setEnabled(false);
                        //Destruir Objetos
                        listaprodSA.clear();
                        sd = null;
//                        proEPaux = null;
                        Conteofaltante = 0;
                        posUs = -1;
                        posAl = -1;
                        deReg = null;
//                        listaDetalle = null;
                        //Habilitar COntrol de Factura
                        jButtonListarPedidos.setEnabled(true);
                        botonConfirmarFactura.setEnabled(true);
                        //Limpiar texto de Factura
                        txtSalidaID.setText("");
                        txtEmitidoPor.setText("");
                        txtSalidaIDFecha.setText("");
                        //Limpiar Campos de Texto
                        txtCodigo.setText("");
                        txtDescripcion.setText("");
                        txtReferencia.setText("");
                        txtMarca.setText("");
                        txtCantidadSugeridad.setText("");
                        txtCantidad.setText("");
                        txtNroBulto.setText("");
                    }
                    if (respuesta == JOptionPane.NO_OPTION) {
                        JOptionPane.showMessageDialog(null, "Listo Para Eliminar Panel");
                    }

                } catch (Exception ex) {
                    System.err.println("Excepcion en Guardar Registro : " + ex);
                    JOptionPane.showMessageDialog(null, "Excepcion en Guardar Registro : " + ex);
                    Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Throwable ex) {
                    JOptionPane.showMessageDialog(null, "Excepcion en Guardar Registro : " + ex);
                    Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        };
        hilo.start();

    }//GEN-LAST:event_jButtonGuardarConteoActionPerformed

    private void jButtonListarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarPedidosActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                busy.setEnabled(true);
                busy.setVisible(true);
                busy.setBusy(true);
                try {
                    JDsalidaParaTiendaPendientes jdSalidadParaTienda = new JDsalidaParaTiendaPendientes(null, true, almacenActual);

                    if (jdSalidadParaTienda.resultList.isEmpty()) {
                        //Panel y Controles de Salidas Pendientes
                        comboBoxAlmacen.setSelectedIndex(-1);
                        comboBoxAlmacen.setEnabled(true);
                        comboBoxUsuarios.setSelectedIndex(-1);
                        comboBoxUsuarios.setEnabled(true);
                    } else {
                        if (jdSalidadParaTienda.sa == null) {
                            JOptionPane.showMessageDialog(null, "no ha Seleccionado Facturas");
                        } else {
                            sa = jdSalidadParaTienda.sa;
                            // listaEP = (List<EntradaProveedor>) sa.getEntradaProveedorCollection();
                            txtSalidaID.setEnabled(true);
                            txtSalidaID.setText(sa.getIdSalida().toString());
                            txtEmitidoPor.setEnabled(true);
                            u = sa.getIdUsuario1();
                            txtEmitidoPor.setText(u.getNombre());
                            txtSalidaIDFecha.setEnabled(true);
                            txtSalidaIDFecha.setText(sa.getFechaAsignacion().toString());

                            txtTiendaDesde.setText(sa.getIdAlmacenDesde().getNombre());

                            txtEstatus.setText(sa.getRevisado().toString());

                            txtTotalSalidaID.setText(sa.getTotal().toString());

                            botonConfirmarFactura.setEnabled(true);

                        }
                    }
                    //busy
                    busy.setEnabled(false);
                    busy.setVisible(false);
                    busy.setBusy(false);

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Excepcion al cargar Lista de Facturas" + ex);
                    Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        };
        hilo.start();

        //    ListarFacturas();
    }//GEN-LAST:event_jButtonListarPedidosActionPerformed

    private void txtSalidaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalidaIDActionPerformed
        //   ValidarFactura();
    }//GEN-LAST:event_txtSalidaIDActionPerformed

    private void jTDetalleRegistroTiendasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDetalleRegistroTiendasKeyReleased

        try {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                if (JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?",
                        "Eliminar registro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    //se elimina
                    int i;
                    int[] selection = jTDetalleRegistroTiendas.getSelectedRows();
                    for (i = 0; i < selection.length; i++) {
                        selection[i] = jTDetalleRegistroTiendas.convertRowIndexToModel(selection[i]);
                    }
//                    EntradaProveedor proEPaux2 = (EntradaProveedor) jTDetalleRegistroTiendas.getValueAt(selection[0], selection[selection.length - 1]);
                    this.listaprodSA.add(modeloTablaTomaFisicaInventarioTiendas.getProdSDmt().getSd());
                    this.listaDetalle.remove(selection[i - 1]);

                    modeloTablaTomaFisicaInventarioTiendas.fireTableRowsDeleted(selection[0], selection[selection.length - 1]);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion al Eliminar registro de La Tabla" + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);

        }
    }//GEN-LAST:event_jTDetalleRegistroTiendasKeyReleased

    private void botonReiniciarTodoDesdeFActuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarTodoDesdeFActuraActionPerformed

        try {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro Desea Cancelar?", "Confirmacion", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                //Panel y Controles de Salidas Pendientes
                this.comboBoxAlmacen.setSelectedIndex(-1);
                this.jButtonListarPedidos.setEnabled(true);
                this.txtSalidaID.setText("");
                this.txtEmitidoPor.setText("");
                this.txtSalidaIDFecha.setText("");
                //COntroles Panel desabilitar
                //this.jLayeredPaneBuscarProducto.setEnabled(false);
                this.comboBoxTipoBusqueda.setEnabled(false);
                this.txtBusqueda.setEnabled(false);
                this.jXButtonBuscar.setEnabled(false);
                this.botonListarProductosInventariTienda.setEnabled(false);
                //Limpiar Campos de Texto
                this.txtCodigo.setText("");
                this.txtDescripcion.setText("");
                this.txtReferencia.setText("");
                this.txtMarca.setText("");
                this.txtCantidadSugeridad.setText("");
                this.txtCantidad.setText("");
                this.txtNroBulto.setText("");
                this.txtRenglon.setText("");
                this.txtTiendaDesde.setText("");
                this.txtEstatus.setText("");
                this.txtTotalSalidaID.setText("");
                //Destruir Objetos
                listaprodSA.clear();
                sd = null;
//                proEPaux = null;
                Conteofaltante = 0;
                posUs = -1;
                posAl = -1;
                deReg = null;
//                listaDetalle = null;
                faltante = null;
                sobrante = null;
                //coMBObOX
                comboBoxAlmacen.setSelectedIndex(-1);
                comboBoxAlmacen.setEnabled(true);
                comboBoxUsuarios.setSelectedIndex(-1);
                comboBoxUsuarios.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion al Cancelar Todo Desde Factura" + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);
        }


    }//GEN-LAST:event_botonReiniciarTodoDesdeFActuraActionPerformed

    private void botonCencelarAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCencelarAgregarActionPerformed

        try {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro Desea Cancelar?", "Confirmacion", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                //Colapsar Panel
                this.jXTaskPaneLCabeceraTiendas.setCollapsed(false);
                listaprodSA.clear();
                //Limpiar Campos de Texto
                this.txtCodigo.setText("");
                this.txtDescripcion.setText("");
                this.txtReferencia.setText("");
                this.txtMarca.setText("");
                this.txtCantidadSugeridad.setText("");
                this.txtCantidad.setText("");
                this.txtNroBulto.setText("");
                this.txtRenglon.setText("");
                this.txtTiendaDesde.setText("");
                this.txtEstatus.setText("");
                this.txtTotalSalidaID.setText("");

                //Limpiar Tablas y Lista Detalles
                listaDetalle.clear();
                jTDetalleRegistroTiendas.removeAll();
                modeloTablaTomaFisicaInventarioTiendas.fireTableDataChanged();
                //Panel y Controles de Factura
                this.jButtonListarPedidos.setEnabled(true);
                this.txtSalidaID.setText("");
                this.txtEmitidoPor.setText("");
                this.txtSalidaIDFecha.setText("");
                //COntroles Panel desabilitar
                //this.jLayeredPaneBuscarProducto.setEnabled(false);
                this.comboBoxTipoBusqueda.setEnabled(false);
                this.txtBusqueda.setEnabled(false);
                this.jXButtonBuscar.setEnabled(false);
                this.botonListarProductosInventariTienda.setEnabled(false);

                //Destruir Objetos
                // listaEP = null;
                sd = null;
                Conteofaltante = 0;
                posUs = -1;
                posAl = -1;
                deReg = null;
                //listaDetalle = null;

                faltante = null;
                sobrante = null;
                //coMBObOX
                comboBoxAlmacen.setSelectedIndex(-1);
                comboBoxAlmacen.setEnabled(true);
                comboBoxUsuarios.setSelectedIndex(-1);
                comboBoxUsuarios.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion al Cencelar Agregar" + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_botonCencelarAgregarActionPerformed

    private void comboBoxTipoBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxTipoBusquedaItemStateChanged

        this.txtBusqueda.setText("");
        this.txtBusqueda.requestFocus();

    }//GEN-LAST:event_comboBoxTipoBusquedaItemStateChanged

    private void comboBoxAlmacenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxAlmacenItemStateChanged

        posAl = comboBoxAlmacen.getSelectedIndex();
        if (posAl > 0) {

            this.almacenActual = (Almacen) resultListAlmacen.get(posAl);
            this.jButtonListarPedidos.setEnabled(true);
            System.err.println("Almacen Seleccionado es :" + almacenActual.getIdAlmacen());
        }


    }//GEN-LAST:event_comboBoxAlmacenItemStateChanged

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped

        int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
        switch (pos) {
            case 0:
                char car = evt.getKeyChar();
                String cadena = "_{}[¨*´!°#$%&/()=?;;><qwertyuiopñlkjhgfdsazxcvbnm´`¡'<º"
                        + "¨_:´:_*^`QWERTYUIOPÑLKJHGFDSAZXCVBNM´ç`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
                char s = '"';
                for (int i = 0; i < cadena.length(); i++) {
                    if (car == cadena.charAt(i) || car == s) {
                        JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Valores Numerico Para Este Tipo de Busqueda|n"
                                + "ó Seleccione El Tipo de Busqueda Correcta.");
                        evt.consume();
                    }
                }
            //  break;

        }

    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void botonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonImprimirActionPerformed

    private void botonGenerarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarNotasActionPerformed
        btNC.setEnabled(sobrante != null);
        btND.setEnabled(faltante != null);
        dialogoMostrarNotas.pack();
        dialogoMostrarNotas.setVisible(true);
    }//GEN-LAST:event_botonGenerarNotasActionPerformed

    private void botonTotalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTotalizarActionPerformed

        try {
            if (jTDetalleRegistroTiendas.getRowCount() != 0
                    && listaprodSA.isEmpty()) {
                jButtonGuardarConteo.setEnabled(true);
                botonImprimir.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "DEBE Finalizar de Contabilizar TODOS Los Productos"
                        + "De Mercancia Asignada Para la Tienda");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion al Totalizar Pedido" + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);

        }
    }//GEN-LAST:event_botonTotalizarActionPerformed

    private void btNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNCActionPerformed
        JPnotaCreditoDebito jpNcd = new JPnotaCreditoDebito(true);
        jpNcd.setNcd(sobrante);
        JavaUtil.createJDialogGeneric(jpNcd);
    }//GEN-LAST:event_btNCActionPerformed

    private void btNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNDActionPerformed
        JPnotaCreditoDebito jpNcd = new JPnotaCreditoDebito(false);
        jpNcd.setNcd(faltante);
        JavaUtil.createJDialogGeneric(jpNcd);
    }//GEN-LAST:event_btNDActionPerformed

    private void txtRenglonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRenglonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRenglonActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped

        char car = evt.getKeyChar();
        String cadena = " ,-_{}[¨*+´!°#$%&/()=?¡.;;><qwertyuiopñlkjhgfdsazxcvbnm,.-ç´+`¡'<º"
                + "¨_:´:_.-*^+`QWERTYUIOPÑLKJHGFDSAZXCVBNM,.-´ç+`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
        char s = '"';
        for (int i = 0; i < cadena.length(); i++) {
            if (car == cadena.charAt(i) || car == s) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed

        try {
            //
            if ("".equals(this.txtCantidad.getText()) // || Integer.parseInt(this.txtCantidad.getText()) == 0 //|| (this.sd.getCantidadProducto() * this.sd.getCantidadSet()) <= (Math.abs(Integer.parseInt(this.txtCantidad.getText())))
                    ) {
                JOptionPane.showMessageDialog(null, "¡¡¡Cantida No Puede Estar Vacio,"
                        + "Intriduzca Cantidad Por Favor!!!");

            } else {
                botonAgregarActionPerformed(null);

            }
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Excepcion al Validar Cantidad" + e);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, e);

        }

    }//GEN-LAST:event_txtCantidadActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed

        try {
            if ("".equals(this.txtCantidad.getText())
                    || "".equals(this.txtNroBulto.getText())
                    || "".equals(this.txtReferencia.getText())
                    || "".equals(this.txtMarca.getText())
                    || "".equals(this.txtCantidadSugeridad.getText())
                    || sd == null) {
                JOptionPane.showMessageDialog(null, "Posibles Excepciones: \n"
                        + "1: Las Datos Estan Vacio\n "
                        + "2: No existe el Producto\n");
            } else {
                //*******************************************
                // Validar Toma Fisica
                //********************************************

                if (sd.getCantidadProducto() == Integer.parseInt(this.txtCantidad.getText())) {
                    agregar();
                } else {

                    int respuesta = JOptionPane.showConfirmDialog(null, "LA CANTIDAD DEL PRODUCTO ES IMCOMPLETA...\n La Cantidad Correcta Deberia Ser :" + sd.getCantidadProducto() + "\n ¿Desea Continuar de Igual Manera?",
                            "COMPROBACION DE CANTIDADES", JOptionPane.YES_NO_OPTION);

                    if (respuesta == JOptionPane.YES_OPTION) {
                        agregar();
                    }
                    if (respuesta == JOptionPane.NO_OPTION) {
                        agregar();
                    }
                }

            }

        } catch (HeadlessException | NumberFormatException ex) {
            System.err.println("Excepcion AGREGARNDO PRODUCTO EN LA TABLA Y LISTA : " + ex);
            Logger.getLogger(Tiendas1.class.getName()).log(Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_botonAgregarActionPerformed

    public void agregar() {
        //****************************************************
        //Agreagar a Listato y Tabla
        //****************************************************

        deReg = new DetalleRegistro();
        deReg.setSd(sd);

        deReg.setCantidad(Integer.parseInt(this.txtCantidad.getText()));
        // deReg.setBulto(Integer.parseInt(this.txtNroBulto.getText()));
        // deReg.setRenglon(i++);

        Conteofaltante = Integer.parseInt(this.txtCantidad.getText());
        //negativo:llego menos de lo que deberia
        //positivo:llego mas de lo que deberia
        Conteofaltante -= sd.getCantidadProducto();
        deReg.setConteoFaltante(Conteofaltante);
        deReg.setTotalFaltante(Math.abs(Conteofaltante) * sd.getProducto().getPrecioOriginal());

        // deReg.getSd().setEstatus("Aprobado");
        listaDetalle.add(deReg);

        modeloTablaTomaFisicaInventarioTiendas.setListaDetalleResgistro(listaDetalle);
        modeloTablaTomaFisicaInventarioTiendas.fireTableDataChanged();
        modeloTablaTomaFisicaInventarioTiendas.setProdSDmt(deReg);

        this.txtReferencia.setText("");
        this.txtMarca.setText("");
        this.txtCantidadSugeridad.setText("");
        this.txtCodigo.setText("");
        this.txtDescripcion.setText("");
        this.txtCantidad.setText("");
        this.txtNroBulto.setText("");
        //   this.txtNroBulto.setEnabled(false);
        this.txtBusqueda.requestFocus();
        txtRenglon.setText("");

        //Remover de Lista Actual Producto Agregago
        //this.proEPaux = sd;
        this.listaprodSA.remove(sd);
    }
    private void botonLimpiarAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarAgregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonLimpiarAgregarActionPerformed

    private void txtEmitidoPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmitidoPorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmitidoPorActionPerformed

    private void txtEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton botonAgregar;
    private org.jdesktop.swingx.JXButton botonCencelarAgregar;
    private org.jdesktop.swingx.JXButton botonConfirmarFactura;
    private org.jdesktop.swingx.JXButton botonGenerarNotas;
    private org.jdesktop.swingx.JXButton botonImprimir;
    private org.jdesktop.swingx.JXButton botonLimpiarAgregar;
    private org.jdesktop.swingx.JXButton botonListarProductosInventariTienda;
    private org.jdesktop.swingx.JXButton botonReiniciarTodoDesdeFActura;
    private org.jdesktop.swingx.JXButton botonTotalizar;
    private javax.swing.JButton btNC;
    private javax.swing.JButton btND;
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JComboBox comboBoxAlmacen;
    private javax.swing.JComboBox comboBoxTipoBusqueda;
    private javax.swing.JComboBox comboBoxUsuarios;
    private javax.swing.JDialog dialogoMostrarNotas;
    private org.jdesktop.swingx.JXButton jButtonGuardarConteo;
    private javax.swing.JButton jButtonListarPedidos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPaneBuscarProducto;
    private javax.swing.JLayeredPane jLayeredPaneDatosProductos;
    private javax.swing.JLayeredPane jLayeredPanePrincipal;
    private javax.swing.JLayeredPane jLayeredPaneProductos;
    private javax.swing.JLayeredPane jLayeredPaneTienda;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTDetalleRegistroTiendas;
    private org.jdesktop.swingx.JXButton jXButtonBuscar;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel11;
    private org.jdesktop.swingx.JXLabel jXLabel12;
    private org.jdesktop.swingx.JXLabel jXLabel13;
    private org.jdesktop.swingx.JXLabel jXLabel14;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private org.jdesktop.swingx.JXTaskPane jXTaskPaneLCabeceraTiendas;
    private org.jdesktop.swingx.JXTextField jXTextField2;
    private org.jdesktop.swingx.JXTextField jXTextField4;
    private org.jdesktop.swingx.JXLabel labelReferencia;
    private org.jdesktop.swingx.JXTextField txtBusqueda;
    private org.jdesktop.swingx.JXTextField txtCantidad;
    private org.jdesktop.swingx.JXTextField txtCantidadSugeridad;
    private org.jdesktop.swingx.JXTextField txtCodigo;
    private org.jdesktop.swingx.JXTextField txtDescripcion;
    private javax.swing.JTextField txtEmitidoPor;
    private org.jdesktop.swingx.JXTextField txtEstatus;
    private org.jdesktop.swingx.JXTextField txtMarca;
    private org.jdesktop.swingx.JXTextField txtNroBulto;
    private org.jdesktop.swingx.JXTextField txtReferencia;
    private org.jdesktop.swingx.JXTextField txtRenglon;
    private javax.swing.JTextField txtSalidaID;
    private org.jdesktop.swingx.JXTextField txtSalidaIDFecha;
    private org.jdesktop.swingx.JXTextField txtTiendaDesde;
    private org.jdesktop.swingx.JXTextField txtTotalSalidaID;
    // End of variables declaration//GEN-END:variables

}
