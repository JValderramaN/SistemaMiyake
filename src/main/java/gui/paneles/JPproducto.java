/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.paneles;

import java.util.List;
import modelos.mapeos.Producto;
import util.JavaUtil;
import static util.JavaUtil.createJDialogGeneric;
import static util.JavaUtil.setTableCellAlignment;
import hibernate.DAO.ObjectModelDAO;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelos.mapeos.Clasificacion;
import modelos.mapeos.Marca;
import modelos.mapeos.Producto;
import modelos.mapeos.Proveedor;
import org.hibernate.Query;
import org.jdesktop.swingx.JXBusyLabel;
import org.jdesktop.swingx.painter.BusyPainter;
import org.pushingpixels.substance.api.skin.SubstanceBusinessBlueSteelLookAndFeel;

/**
 *
 * @author Usuario
 */
public class JPproducto extends javax.swing.JPanel {

    private List resultListClasificacion;
    private List resultListMarca;
    private List resultListProveedor;
    private List resultListProducto;
    private int pos;
    private Thread hilo = null;
    private Integer tabCrud;

    public JPproducto() {
        this(null);
    }

    public JPproducto(Integer tabCrud) {
        this.tabCrud = tabCrud;
        initComponents();

        setTableCellAlignment(JLabel.CENTER, listadoProductos);
        setTableCellAlignment(JLabel.CENTER, tablaModifProducto);
        setTableCellAlignment(JLabel.CENTER, tablaEliminarProducto);
        listadoProductos.getTableHeader().setReorderingAllowed(false);
        tablaModifProducto.getTableHeader().setReorderingAllowed(false);
        tablaEliminarProducto.getTableHeader().setReorderingAllowed(false);

        tablaModifProducto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {

                    if (tablaModifProducto.getSelectedRow() == -1) {
                        return;
                    }
                    pos = tablaModifProducto.getSelectedRow();
                    Producto p = (Producto) resultListProducto.get(pos);
                    // Producto p = null;
//                    boolean sw = false;
//                    for (int i = 0; i < resultListProducto.size(); i++) {
//                        p = (Producto) resultListProducto.get(i);
//                        if (((Integer) tablaModifProducto.getValueAt(
//                                tablaModifProducto.getSelectedRow(), 0)).equals(
//                                        p.getIdProducto())) {
//                            sw = true;
//                            break;
//                        }
//                    }
                    //                 if (sw && p != null) {
                    field_descrip.setText(p.getDescripcion());
                    field_precioOrig.setText(p.getPrecioOriginal() + "");
                    field_ref.setText(p.getReferenciaProducto());
                    field_codproducto.setText(p.getIdProducto() + "");
                    //cb_clasif1.setSelectedItem(p.getIdClasificacion().getNombre());
                    cb_clasifProduct1.setSelectedItem(p.getIdClasificacion() == null ? null : p.getIdClasificacion().getNombre());
                    cb_proveedor1.setSelectedItem(p.getIdProveedor() == null ? null : p.getIdProveedor().getNombre());
                    cb_marca1.setSelectedItem(p.getIdMarca() == null ? null : p.getIdMarca().getNombre());
                    lb_dptoProduct1.setText(p.getIdClasificacion().getIdDepartamento().getNombre());
                    lb_divisionProd1.setText(p.getIdClasificacion().getIdDepartamento().getIdDivision().getNombre());
                    //}
                }
            }
        });

        tablaEliminarProducto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {

                    if (tablaEliminarProducto.getSelectedRow() == -1) {
                        return;
                    }
                    pos = tablaEliminarProducto.getSelectedRow();

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelScrudProducto = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelConsulta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoProductos = new org.jdesktop.swingx.JXTable();
        panelCabBusq = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        f_productbuscado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelCrearProducto = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        f_descripcionProducto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        f_ref_Product = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        f_precio_orig = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lb_dptoProduct = new javax.swing.JLabel();
        lb_divisionProd = new javax.swing.JLabel();
        bCrearProducto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cb_clasif = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cb_marca = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cb_proveedor = new javax.swing.JComboBox();
        bCrearClasif = new javax.swing.JButton();
        bCrearMarca = new javax.swing.JButton();
        bCrearProveedor = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        panelModificarProducto = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaModifProducto = new org.jdesktop.swingx.JXTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        field_descrip = new javax.swing.JTextField();
        field_ref = new javax.swing.JTextField();
        field_precioOrig = new javax.swing.JTextField();
        cb_marca1 = new javax.swing.JComboBox();
        cb_proveedor1 = new javax.swing.JComboBox();
        bModifProducto = new javax.swing.JButton();
        lb_divisionProd1 = new javax.swing.JLabel();
        lb_dptoProduct1 = new javax.swing.JLabel();
        cb_clasifProduct1 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        field_codproducto = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        panelEliminarProducto = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEliminarProducto = new org.jdesktop.swingx.JXTable();
        bEliminProducto = new javax.swing.JButton();
        busy = new org.jdesktop.swingx.JXBusyLabel();

        setLayout(new java.awt.BorderLayout());

        panelScrudProducto.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelScrudProductoStateChanged(evt);
            }
        });

        panelConsulta.setLayout(new java.awt.BorderLayout());

        listadoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "REFERENCIA", "DESCRIPCION", "CLASIFICACION", "MARCA", "PROVEEDOR", "PRECIO ORIGINAL", "FECHA CREACION", "FECHA MODIFICACION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadoProductos.setHorizontalScrollEnabled(true);
        listadoProductos.setSortable(false);
        jScrollPane1.setViewportView(listadoProductos);

        panelConsulta.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1417636473_edit-find-replace-20.png"))); // NOI18N
        jLabel6.setText("Filtrar");

        f_productbuscado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f_productbuscadoKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415657451_database_search.png"))); // NOI18N
        jLabel1.setText("Para realizar una Búsqueda: Haga Click en la Tabla + CTRL F");

        javax.swing.GroupLayout panelCabBusqLayout = new javax.swing.GroupLayout(panelCabBusq);
        panelCabBusq.setLayout(panelCabBusqLayout);
        panelCabBusqLayout.setHorizontalGroup(
            panelCabBusqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabBusqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCabBusqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCabBusqLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(f_productbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        panelCabBusqLayout.setVerticalGroup(
            panelCabBusqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabBusqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCabBusqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(f_productbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        panelConsulta.add(panelCabBusq, java.awt.BorderLayout.NORTH);

        jScrollPane4.setViewportView(panelConsulta);

        panelScrudProducto.addTab("Consultar", jScrollPane4);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418687577_Database.png"))); // NOI18N
        jLabel4.setText("Descripción:");

        jLabel7.setText("Referencia del Producto:");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418686950_rss-tag.png"))); // NOI18N
        jLabel8.setText("Precio Original:");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/division.png"))); // NOI18N
        jLabel11.setText("División:");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/departamento.png"))); // NOI18N
        jLabel12.setText("Departamento:");

        lb_dptoProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bCrearProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415658208_040.png"))); // NOI18N
        bCrearProducto.setText("Crear Producto");
        bCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(f_ref_Product, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(f_precio_orig)
                    .addComponent(lb_dptoProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_divisionProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f_descripcionProducto))
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bCrearProducto)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(f_descripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(f_ref_Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(f_precio_orig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(lb_divisionProd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(lb_dptoProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bCrearProducto)
                .addContainerGap(253, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/clasificacion.png"))); // NOI18N
        jLabel2.setText("Clasificación:");

        cb_clasif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_clasifActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/christmas_star.png"))); // NOI18N
        jLabel5.setText("Marca:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/proveedor.png"))); // NOI18N
        jLabel3.setText("Proveedor:");

        bCrearClasif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415656550_Add.png"))); // NOI18N
        bCrearClasif.setText("Crear Clasificación");
        bCrearClasif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearClasifActionPerformed(evt);
            }
        });

        bCrearMarca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418876086_star-add.png"))); // NOI18N
        bCrearMarca.setText("Crear Marca");
        bCrearMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearMarcaActionPerformed(evt);
            }
        });

        bCrearProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418875864_testimonials.png"))); // NOI18N
        bCrearProveedor.setText("Crear Proveedor");
        bCrearProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(bCrearProveedor))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cb_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bCrearMarca))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cb_clasif, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bCrearClasif)))))
                .addGap(68, 68, 68))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cb_clasif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCrearClasif))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cb_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCrearMarca))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCrearProveedor))
                .addContainerGap(350, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelCrearProductoLayout = new javax.swing.GroupLayout(panelCrearProducto);
        panelCrearProducto.setLayout(panelCrearProductoLayout);
        panelCrearProductoLayout.setHorizontalGroup(
            panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrearProductoLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCrearProductoLayout.setVerticalGroup(
            panelCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane5.setViewportView(panelCrearProducto);

        panelScrudProducto.addTab("Crear", jScrollPane5);

        panelModificarProducto.setLayout(new java.awt.BorderLayout());

        tablaModifProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código Producto", "Referencia", "Descripción", "Clasificación", "Marca", "Proveedor", "Precio Original"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaModifProducto.setHorizontalScrollEnabled(true);
        tablaModifProducto.setSortable(false);
        jScrollPane2.setViewportView(tablaModifProducto);

        panelModificarProducto.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/clasificacion.png"))); // NOI18N
        jLabel13.setText("Clasificación:");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/proveedor.png"))); // NOI18N
        jLabel14.setText("Proveedor:");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418687577_Database.png"))); // NOI18N
        jLabel15.setText("Descripción:");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/christmas_star.png"))); // NOI18N
        jLabel16.setText("Marca");

        jLabel18.setText("Referencia del Producto:");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1418686950_rss-tag.png"))); // NOI18N
        jLabel19.setText("Precio Original:");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/division.png"))); // NOI18N
        jLabel22.setText("División:");

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/departamento.png"))); // NOI18N
        jLabel23.setText("Departamento:");

        cb_marca1.setMaximumSize(new java.awt.Dimension(31, 20));

        cb_proveedor1.setMaximumSize(new java.awt.Dimension(31, 20));

        bModifProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415657763_database_save.png"))); // NOI18N
        bModifProducto.setText("Modificar");
        bModifProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModifProductoActionPerformed(evt);
            }
        });

        cb_clasifProduct1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3", "3", "4" }));
        cb_clasifProduct1.setMaximumSize(new java.awt.Dimension(31, 20));
        cb_clasifProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_clasifProduct1ActionPerformed(evt);
            }
        });

        jLabel25.setText("Código Producto:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bModifProducto)
                .addGap(90, 90, 90))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel14))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_marca1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cb_clasifProduct1, 0, 154, Short.MAX_VALUE)
                            .addComponent(cb_proveedor1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_divisionProd1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_codproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_descrip, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_ref, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_precioOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_dptoProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(field_codproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(field_ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(field_descrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(field_precioOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_divisionProd1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(lb_dptoProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cb_clasifProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_marca1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cb_proveedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bModifProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        panelModificarProducto.add(jPanel5, java.awt.BorderLayout.EAST);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415657451_database_search.png"))); // NOI18N
        jLabel20.setText("Para realizar una Búsqueda: Haga Click en la Tabla + CTRL F");
        panelModificarProducto.add(jLabel20, java.awt.BorderLayout.NORTH);

        jScrollPane6.setViewportView(panelModificarProducto);

        panelScrudProducto.addTab("Modificar", jScrollPane6);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415657451_database_search.png"))); // NOI18N
        jLabel28.setText("Para realizar una Búsqueda: Haga Click en la Tabla + CTRL F");

        tablaEliminarProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Clasificación", "Proveedor", "Descripción", "Referencia", "Marca", "Precio Original", "Código Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEliminarProducto.setHorizontalScrollEnabled(true);
        tablaEliminarProducto.setSortable(false);
        jScrollPane3.setViewportView(tablaEliminarProducto);

        bEliminProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1415657052_038.png"))); // NOI18N
        bEliminProducto.setText("Eliminar");
        bEliminProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel28))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bEliminProducto)))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bEliminProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout panelEliminarProductoLayout = new javax.swing.GroupLayout(panelEliminarProducto);
        panelEliminarProducto.setLayout(panelEliminarProductoLayout);
        panelEliminarProductoLayout.setHorizontalGroup(
            panelEliminarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEliminarProductoLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        panelEliminarProductoLayout.setVerticalGroup(
            panelEliminarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane7.setViewportView(panelEliminarProducto);

        panelScrudProducto.addTab("Eliminar", jScrollPane7);

        panelScrudProducto.setSelectedIndex(-1);

        add(panelScrudProducto, java.awt.BorderLayout.CENTER);

        busy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        busy.setText("Cargando...");
        add(busy, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void bCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearProductoActionPerformed
        try {

            if (!f_descripcionProducto.getText().equals("") && !f_ref_Product.getText().equals("")
                    && !f_precio_orig.getText().equals("")) {
                if (JOptionPane.showConfirmDialog(this, "¿Está seguro de crear el"
                        + " nuevo producto con nombre : " + f_descripcionProducto.getText() + "?",
                        "Información", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                    ObjectModelDAO.saveObject(new Producto(
                            f_descripcionProducto.getText(),
                            f_ref_Product.getText(),
                            Float.parseFloat(f_precio_orig.getText()),
                            (Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex()),
                            (Marca) resultListMarca.get(cb_marca.getSelectedIndex()),
                            (Proveedor) resultListProveedor.get(cb_proveedor.getSelectedIndex())
                    )
                    );
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bCrearProductoActionPerformed

    private void bCrearClasifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearClasifActionPerformed
        createJDialogGeneric(new JPclasificacion(1));
        resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
        for (Object object : resultListClasificacion) {
            Clasificacion c = (Clasificacion) object;
            cb_clasif.addItem(c.getNombre());
        }
    }//GEN-LAST:event_bCrearClasifActionPerformed

    private void bCrearMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearMarcaActionPerformed
        createJDialogGeneric(new JPmarca(1));

        resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");

        for (Object object : resultListMarca) {
            Marca m = (Marca) object;
            cb_marca.addItem(m.getNombre());
        }
    }//GEN-LAST:event_bCrearMarcaActionPerformed

    private void bCrearProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearProveedorActionPerformed
        createJDialogGeneric(new JPproveedor(1));
        resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
        for (Object object : resultListProveedor) {
            Proveedor p = (Proveedor) object;
            cb_proveedor.addItem(p.getNombre());
        }
    }//GEN-LAST:event_bCrearProveedorActionPerformed

    private void cb_clasifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_clasifActionPerformed
        if (cb_clasif.getSelectedIndex() == -1) {
            return;
        }
        lb_divisionProd.setText(((Clasificacion) resultListClasificacion.get(
                cb_clasif.getSelectedIndex())).getIdDepartamento().getIdDivision().getNombre());

        lb_dptoProduct.setText(((Clasificacion) resultListClasificacion.get(
                cb_clasif.getSelectedIndex())).getIdDepartamento().getNombre());

    }//GEN-LAST:event_cb_clasifActionPerformed

    private void bModifProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModifProductoActionPerformed
        if (pos == -1 || field_descrip.getText().equals("")) {
            return;
        }

        String valor = tablaModifProducto.getValueAt(tablaModifProducto.getSelectedRow(), 1).toString();//1 por el nombre
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de modificar el"
                + " Producto " + valor + "?", "Información", JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION) {

            int posOr = this.pos;
            Producto p = (Producto) resultListProducto.get(pos);
            p.setDescripcion(field_descrip.getText());
            p.setReferenciaProducto(f_ref_Product.getText());
            p.setPrecioOriginal(Float.parseFloat(field_precioOrig.getText()));
            p.setIdMarca((Marca) resultListMarca.get(cb_marca1.getSelectedIndex()));
            p.setIdProveedor((Proveedor) resultListProveedor.get(cb_proveedor1.getSelectedIndex()));
            p.setIdClasificacion((Clasificacion) resultListClasificacion.get(cb_clasifProduct1.getSelectedIndex()));
            p.setIdProducto(Integer.parseInt(field_codproducto.getText()));
            p.setUltimaActividad(new Date());
            ObjectModelDAO.updateObject(p);

            resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
            resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
            resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
            cb_proveedor1.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca1.removeAllItems();

            for (Object object : resultListClasificacion) {
                Clasificacion c = (Clasificacion) object;
                cb_clasifProduct1.addItem(c.getNombre());
            }
            for (Object object : resultListMarca) {
                Marca m = (Marca) object;
                cb_marca1.addItem(m.getNombre());
            }

            for (Object object : resultListProveedor) {
                Proveedor prov = (Proveedor) object;
                cb_proveedor1.addItem(prov.getNombre());
            }

            String sql = "FROM Producto p order by p.idProducto asc";
            resultListProducto = ObjectModelDAO.getResultQuery(sql);
            JavaUtil.displayResult(resultListProducto, tablaModifProducto);
            tablaModifProducto.setEditable(false);
            tablaModifProducto.setRowSelectionInterval(posOr, posOr);
        }
    }//GEN-LAST:event_bModifProductoActionPerformed

    private void bEliminProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminProductoActionPerformed
        if (pos == -1) {
            return;
        }

        String valor = tablaEliminarProducto.getValueAt(tablaEliminarProducto.getSelectedRow(), 0).toString();
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el"
                + " Producto " + valor
                + "?", "Información", JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION) {

            ObjectModelDAO.deleteObject(resultListProducto.get(pos));
            String sql = "FROM Producto p order by p.idProducto asc";
            resultListProducto = ObjectModelDAO.getResultQuery(sql);
            JavaUtil.displayResult(resultListProducto, tablaEliminarProducto);
            pos = -1;
            tablaEliminarProducto.setEditable(false);
        }
    }//GEN-LAST:event_bEliminProductoActionPerformed

    private void setNULLS(int swpanel) {

        if (swpanel == 0) {
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 1) {

            f_descripcionProducto.setText("");
            field_precioOrig.setText("");
            f_ref_Product.setText("");
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListProducto = null;
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_marca.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 2) {
            field_descrip.setText("");
            field_precioOrig.setText("");
            field_codproducto.setText("");
            lb_divisionProd1.setText("");
            lb_dptoProduct1.setText("");
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
        if (swpanel == 3) {
            tablaEliminarProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            tablaModifProducto.setModel(new DefaultTableModel(new Vector(), new Vector()));
            listadoProductos.setModel(new DefaultTableModel(new Vector(), new Vector()));
            resultListClasificacion = null;
            resultListMarca = null;
            resultListProveedor = null;
            resultListProducto = null;
            cb_clasif.removeAllItems();
            cb_clasifProduct1.removeAllItems();
            cb_marca.removeAllItems();
            cb_marca1.removeAllItems();
            cb_proveedor.removeAllItems();
            cb_proveedor1.removeAllItems();
        }
    }

    private void panelScrudProductoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelScrudProductoStateChanged
        if (panelScrudProducto.getTabCount() != 4) {
            return;
        }

        //verifica si debe abrir un panel desde la llamada
        if (this.tabCrud != null) {
            int tabCrud = this.tabCrud.intValue();
            this.tabCrud = null;
            panelScrudProducto.setSelectedIndex(tabCrud);
            return;
        }
        
        hilo = new Thread() {
        
            @Override
            public void run() {
                panelScrudProducto.setEnabled(false);
                busy.setBusy(true);
                busy.setVisible(true);

                if (panelScrudProducto.getSelectedIndex() == 0) {

                    setNULLS(0);
                    String sql = " FROM Producto p order by p.idProducto asc";

                    resultListProducto = ObjectModelDAO.getResultQuery(sql);

                    JavaUtil.displayResult(resultListProducto, listadoProductos);
                    listadoProductos.setEditable(false);
                    resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                    resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");

                }
                if (panelScrudProducto.getSelectedIndex() == 1) {
                    setNULLS(1);
                    //resultListDivision = ObjectModelDAO.getResultQuery("FROM Division d order by d.idDivision asc");
                    //resultListDepartamento = ObjectModelDAO.getResultQuery("FROM Departamento d order by d.idDepartamento asc");
                    resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                    resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
                    resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
                    cb_marca.removeAllItems();
                    cb_proveedor.removeAllItems();
                    cb_clasif.removeAllItems();

                    for (Object object : resultListClasificacion) {
                        Clasificacion c = (Clasificacion) object;
                        cb_clasif.addItem(c.getNombre());
                    }

                    for (Object object : resultListMarca) {
                        Marca m = (Marca) object;
                        cb_marca.addItem(m.getNombre());
                    }
                    for (Object object : resultListProveedor) {
                        Proveedor p = (Proveedor) object;
                        cb_proveedor.addItem(p.getNombre());
                    }

                    lb_divisionProd.setText(((Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex())).getIdDepartamento().getIdDivision().getNombre());
                    lb_dptoProduct.setText(((Clasificacion) resultListClasificacion.get(cb_clasif.getSelectedIndex())).getIdDepartamento().getNombre());
                }

                if (panelScrudProducto.getSelectedIndex() == 2) {
                    setNULLS(2);
                    //resultListDivision = ObjectModelDAO.getResultQuery("FROM Division d order by d.idDivision asc");
                    //resultListDepartamento = ObjectModelDAO.getResultQuery("FROM Departamento d order by d.idDepartamento asc");
                    resultListClasificacion = ObjectModelDAO.getResultQuery("FROM Clasificacion c order by c.idClasificacion asc");
                    resultListMarca = ObjectModelDAO.getResultQuery("FROM Marca m order by m.idMarca asc");
                    resultListProveedor = ObjectModelDAO.getResultQuery("FROM Proveedor p order by p.idProveedor asc");
                    cb_marca1.removeAllItems();
                    cb_proveedor1.removeAllItems();
                    cb_clasifProduct1.removeAllItems();

                    for (Object object : resultListClasificacion) {
                        Clasificacion c = (Clasificacion) object;
                        cb_clasifProduct1.addItem(c.getNombre());
                    }

                    for (Object object : resultListMarca) {
                        Marca m = (Marca) object;
                        cb_marca1.addItem(m.getNombre());
                    }
                    for (Object object : resultListProveedor) {
                        Proveedor p = (Proveedor) object;
                        cb_proveedor1.addItem(p.getNombre());
                    }

                    String sql = "FROM Producto p order by p.idProducto asc";
                    resultListProducto = ObjectModelDAO.getResultQuery(sql);
                    JavaUtil.displayResult(resultListProducto, tablaModifProducto);
                    tablaModifProducto.setEditable(false);
                    pos = -1;
                    cb_clasifProduct1.setSelectedIndex(pos);
                    cb_marca1.setSelectedIndex(pos);
                    cb_proveedor1.setSelectedIndex(pos);
                }

                if (panelScrudProducto.getSelectedIndex() == 3) {
                    setNULLS(3);
                    String sql = "FROM Producto p order by p.idProducto asc";
                    resultListProducto = ObjectModelDAO.getResultQuery(sql);

                    JavaUtil.displayResult(resultListProducto, tablaEliminarProducto);
                    pos = -1;
                    tablaEliminarProducto.setEditable(false);

                }
                busy.setBusy(false);
                busy.setVisible(false);
                panelScrudProducto.setEnabled(true);
            }

        };

        hilo.start();
        //  JOptionPane.showMessageDialog(this, "que paso!!");

    }//GEN-LAST:event_panelScrudProductoStateChanged

    private void cb_clasifProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_clasifProduct1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_clasifProduct1ActionPerformed

    private void f_productbuscadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_productbuscadoKeyReleased
        if (!busy.isBusy()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(listadoProductos.getModel());
            listadoProductos.setRowSorter(sorter);
            String referenciabuscada = f_productbuscado.getText();
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + referenciabuscada));
        }
    }//GEN-LAST:event_f_productbuscadoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCrearClasif;
    private javax.swing.JButton bCrearMarca;
    private javax.swing.JButton bCrearProducto;
    private javax.swing.JButton bCrearProveedor;
    private javax.swing.JButton bEliminProducto;
    private javax.swing.JButton bModifProducto;
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JComboBox cb_clasif;
    private javax.swing.JComboBox cb_clasifProduct1;
    private javax.swing.JComboBox cb_marca;
    private javax.swing.JComboBox cb_marca1;
    private javax.swing.JComboBox cb_proveedor;
    private javax.swing.JComboBox cb_proveedor1;
    private javax.swing.JTextField f_descripcionProducto;
    private javax.swing.JTextField f_precio_orig;
    private javax.swing.JTextField f_productbuscado;
    private javax.swing.JTextField f_ref_Product;
    private javax.swing.JTextField field_codproducto;
    private javax.swing.JTextField field_descrip;
    private javax.swing.JTextField field_precioOrig;
    private javax.swing.JTextField field_ref;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lb_divisionProd;
    private javax.swing.JLabel lb_divisionProd1;
    private javax.swing.JLabel lb_dptoProduct;
    private javax.swing.JLabel lb_dptoProduct1;
    private org.jdesktop.swingx.JXTable listadoProductos;
    private javax.swing.JPanel panelCabBusq;
    private javax.swing.JPanel panelConsulta;
    private javax.swing.JPanel panelCrearProducto;
    private javax.swing.JPanel panelEliminarProducto;
    private javax.swing.JPanel panelModificarProducto;
    private javax.swing.JTabbedPane panelScrudProducto;
    private org.jdesktop.swingx.JXTable tablaEliminarProducto;
    private org.jdesktop.swingx.JXTable tablaModifProducto;
    // End of variables declaration//GEN-END:variables
}
