/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.paneles;

import hibernate.DAO.ObjectModelDAO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import modelos.mapeos.Almacen;
import modelos.mapeos.InventarioTienda;
import util.JavaUtil;

/**
 *
 * @author Laura
 */
public class JPreduccionInventarioParticular extends javax.swing.JPanel {

    private List resultListFinal = new ArrayList();
    private List resultListAlmacen;
    private int pos;

    public JPreduccionInventarioParticular() {
        initComponents();
        SetCb();

        listadoProductosADescontar.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {

                    pos = listadoProductosADescontar.getSelectedRow();
                    if (pos == -1) {
                        return;
                    }

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cb_Tiend_Inv_Part = new javax.swing.JComboBox();
        lb_Tiend = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoProductosADescontar = new org.jdesktop.swingx.JXTable();
        btn_modfInventario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        lb_Tiend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/1417636330_store.png"))); // NOI18N
        lb_Tiend.setText("Tienda:");

        listadoProductosADescontar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "CODIGO", "DESCRIPCION", "PRECIO CON DESCUENTO", "CANTIDAD"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listadoProductosADescontar.setHorizontalScrollEnabled(true);
        listadoProductosADescontar.setSortable(false);
        listadoProductosADescontar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listadoProductosADescontarKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listadoProductosADescontar);

        btn_modfInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/inventario.png"))); // NOI18N
        btn_modfInventario.setText("Actualizar Inventario");
        btn_modfInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modfInventarioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Listado de Productos a Descontar del Inventario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lb_Tiend)
                .addGap(18, 18, 18)
                .addComponent(cb_Tiend_Inv_Part, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(btn_modfInventario)
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_Tiend_Inv_Part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Tiend)
                    .addComponent(btn_modfInventario))
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SetCb() {
        resultListAlmacen = ObjectModelDAO.getResultQuery("FROM Almacen a order by a.idAlmacen asc");
        cb_Tiend_Inv_Part.removeAllItems();
        for (Object object : resultListAlmacen) {
            Almacen a = (Almacen) object;
            cb_Tiend_Inv_Part.addItem(a.getNombre());
        }
    }
    private void btn_modfInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modfInventarioActionPerformed

        if (resultListFinal.isEmpty()) {

        }
//        Marca m = (Marca) resultList.get(posOr);
//            m.setNombre(nomb_a_Modf.getText());
//            ObjectModelDAO.updateObject(m);
    }//GEN-LAST:event_btn_modfInventarioActionPerformed

    private void listadoProductosADescontarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listadoProductosADescontarKeyReleased
        if (pos == -1) {
            return;
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN ) {
           
            if (listadoProductosADescontar.getValueAt(pos, 3).equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese la cantidad");
                return;
            } else {
                int rowCount = listadoProductosADescontar.getRowCount();
                int rowSelected = listadoProductosADescontar.getSelectedRow();
                //si la fila seleccionada es la ultima
                if (rowSelected == rowCount - 1) {//0 hasta n-1
                    ((DefaultTableModel) listadoProductosADescontar.getModel()).addRow(new Object[listadoProductosADescontar.getColumnCount()]);
                    //se agrego una nueva asi que si se toma en cuenta n
                    listadoProductosADescontar.setRowSelectionInterval(rowCount, rowCount);
                }
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            Object codigoingresado = listadoProductosADescontar.getValueAt(pos, 0);
            Almacen almacenseleccionado = (Almacen) resultListAlmacen.get(cb_Tiend_Inv_Part.getSelectedIndex());

            String sql = "FROM InventarioTienda i WHERE i.inventarioTiendaPK.idProducto = " + codigoingresado
                    + " AND i.inventarioTiendaPK.idAlmacen = " + almacenseleccionado.getIdAlmacen();
            List resultList = ObjectModelDAO.getResultQuery(sql);

            if (resultList.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Código no encontrado");
                return;
            }

            InventarioTienda ivt = (InventarioTienda) resultList.get(0);
            resultListFinal.add(ivt);
            listadoProductosADescontar.getModel().setValueAt(ivt.getProducto().getDescripcion(), pos, 1);
            listadoProductosADescontar.getModel().setValueAt(ivt.getPrecioConDescuento(), pos, 2);
        }

        //si le da a delete
        if (evt.getKeyCode() == KeyEvent.VK_DELETE
                && JOptionPane.showConfirmDialog(null, "Desea eliminar el renglón?",
                        "Advertencia", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            resultListFinal.remove(listadoProductosADescontar.getSelectedRow());
            ((DefaultTableModel) listadoProductosADescontar.getModel()).removeRow(listadoProductosADescontar.getSelectedRow());
        }
    }//GEN-LAST:event_listadoProductosADescontarKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_modfInventario;
    private javax.swing.JComboBox cb_Tiend_Inv_Part;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_Tiend;
    private org.jdesktop.swingx.JXTable listadoProductosADescontar;
    // End of variables declaration//GEN-END:variables
}
